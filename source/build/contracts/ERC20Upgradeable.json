{
  "contractName": "ERC20Upgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b5061084a8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610097575f3560e01c806306fdde031461009b578063095ea7b3146100b957806318160ddd146100dc57806323b872dd146100ee578063313ce56714610101578063395093511461011057806370a082311461012357806395d89b411461014b578063a457c2d714610153578063a9059cbb14610166578063dd62ed3e14610179575b5f80fd5b6100a361018c565b6040516100b091906106a5565b60405180910390f35b6100cc6100c736600461070b565b61021c565b60405190151581526020016100b0565b6035545b6040519081526020016100b0565b6100cc6100fc366004610733565b610235565b604051601281526020016100b0565b6100cc61011e36600461070b565b610258565b6100e061013136600461076c565b6001600160a01b03165f9081526033602052604090205490565b6100a3610279565b6100cc61016136600461070b565b610288565b6100cc61017436600461070b565b610307565b6100e061018736600461078c565b610314565b60606036805461019b906107bd565b80601f01602080910402602001604051908101604052809291908181526020018280546101c7906107bd565b80156102125780601f106101e957610100808354040283529160200191610212565b820191905f5260205f20905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b5f3361022981858561033e565b60019150505b92915050565b5f33610242858285610461565b61024d8585856104d9565b506001949350505050565b5f3361022981858561026a8383610314565b61027491906107f5565b61033e565b60606037805461019b906107bd565b5f33816102958286610314565b9050838110156102fa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61024d828686840361033e565b5f336102298185856104d9565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103a05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f1565b6001600160a01b0382166104015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f1565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61046c8484610314565b90505f1981146104d357818110156104c65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f1565b6104d3848484840361033e565b50505050565b6001600160a01b03831661053d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f1565b6001600160a01b03821661059f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f1565b6001600160a01b0383165f90815260336020526040902054818110156106165760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f1565b6001600160a01b038085165f9081526033602052604080822085850390559185168152908120805484929061064c9084906107f5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161069891815260200190565b60405180910390a36104d3565b5f6020808352835180828501525f5b818110156106d0578581018301518582016040015282016106b4565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610706575f80fd5b919050565b5f806040838503121561071c575f80fd5b610725836106f0565b946020939093013593505050565b5f805f60608486031215610745575f80fd5b61074e846106f0565b925061075c602085016106f0565b9150604084013590509250925092565b5f6020828403121561077c575f80fd5b610785826106f0565b9392505050565b5f806040838503121561079d575f80fd5b6107a6836106f0565b91506107b4602084016106f0565b90509250929050565b600181811c908216806107d157607f821691505b6020821081036107ef57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022f57634e487b7160e01b5f52601160045260245ffdfea26469706673582212202ed553475fdcda0bda152a2da6e8246040122a41556c3f409f53224147c5d4f364736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b5060043610610097575f3560e01c806306fdde031461009b578063095ea7b3146100b957806318160ddd146100dc57806323b872dd146100ee578063313ce56714610101578063395093511461011057806370a082311461012357806395d89b411461014b578063a457c2d714610153578063a9059cbb14610166578063dd62ed3e14610179575b5f80fd5b6100a361018c565b6040516100b091906106a5565b60405180910390f35b6100cc6100c736600461070b565b61021c565b60405190151581526020016100b0565b6035545b6040519081526020016100b0565b6100cc6100fc366004610733565b610235565b604051601281526020016100b0565b6100cc61011e36600461070b565b610258565b6100e061013136600461076c565b6001600160a01b03165f9081526033602052604090205490565b6100a3610279565b6100cc61016136600461070b565b610288565b6100cc61017436600461070b565b610307565b6100e061018736600461078c565b610314565b60606036805461019b906107bd565b80601f01602080910402602001604051908101604052809291908181526020018280546101c7906107bd565b80156102125780601f106101e957610100808354040283529160200191610212565b820191905f5260205f20905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b5f3361022981858561033e565b60019150505b92915050565b5f33610242858285610461565b61024d8585856104d9565b506001949350505050565b5f3361022981858561026a8383610314565b61027491906107f5565b61033e565b60606037805461019b906107bd565b5f33816102958286610314565b9050838110156102fa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61024d828686840361033e565b5f336102298185856104d9565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103a05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f1565b6001600160a01b0382166104015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f1565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61046c8484610314565b90505f1981146104d357818110156104c65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f1565b6104d3848484840361033e565b50505050565b6001600160a01b03831661053d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f1565b6001600160a01b03821661059f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f1565b6001600160a01b0383165f90815260336020526040902054818110156106165760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f1565b6001600160a01b038085165f9081526033602052604080822085850390559185168152908120805484929061064c9084906107f5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161069891815260200190565b60405180910390a36104d3565b5f6020808352835180828501525f5b818110156106d0578581018301518582016040015282016106b4565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610706575f80fd5b919050565b5f806040838503121561071c575f80fd5b610725836106f0565b946020939093013593505050565b5f805f60608486031215610745575f80fd5b61074e846106f0565b925061075c602085016106f0565b9150604084013590509250925092565b5f6020828403121561077c575f80fd5b610785826106f0565b9392505050565b5f806040838503121561079d575f80fd5b6107a6836106f0565b91506107b4602084016106f0565b90509250929050565b600181811c908216806107d157607f821691505b6020821081036107ef57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022f57634e487b7160e01b5f52601160045260245ffdfea26469706673582212202ed553475fdcda0bda152a2da6e8246040122a41556c3f409f53224147c5d4f364736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nativeSrc": "0:5754:84",
        "nodeType": "YulBlock",
        "src": "0:5754:84",
        "statements": [
          {
            "nativeSrc": "6:3:84",
            "nodeType": "YulBlock",
            "src": "6:3:84",
            "statements": []
          },
          {
            "body": {
              "nativeSrc": "135:427:84",
              "nodeType": "YulBlock",
              "src": "135:427:84",
              "statements": [
                {
                  "nativeSrc": "145:12:84",
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:84",
                  "value": {
                    "kind": "number",
                    "nativeSrc": "155:2:84",
                    "nodeType": "YulLiteral",
                    "src": "155:2:84",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nativeSrc": "149:2:84",
                      "nodeType": "YulTypedName",
                      "src": "149:2:84",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "173:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:84"
                      },
                      {
                        "name": "_1",
                        "nativeSrc": "184:2:84",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:84"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "166:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:84"
                    },
                    "nativeSrc": "166:21:84",
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:84"
                  },
                  "nativeSrc": "166:21:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:84"
                },
                {
                  "nativeSrc": "196:27:84",
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nativeSrc": "216:6:84",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:84"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nativeSrc": "210:5:84",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:84"
                    },
                    "nativeSrc": "210:13:84",
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:84"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nativeSrc": "200:6:84",
                      "nodeType": "YulTypedName",
                      "src": "200:6:84",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "243:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:84"
                          },
                          {
                            "name": "_1",
                            "nativeSrc": "254:2:84",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:84"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "239:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:84"
                        },
                        "nativeSrc": "239:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:84"
                      },
                      {
                        "name": "length",
                        "nativeSrc": "259:6:84",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:84"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "232:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:84"
                    },
                    "nativeSrc": "232:34:84",
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:84"
                  },
                  "nativeSrc": "232:34:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:84"
                },
                {
                  "nativeSrc": "275:10:84",
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:84",
                  "value": {
                    "kind": "number",
                    "nativeSrc": "284:1:84",
                    "nodeType": "YulLiteral",
                    "src": "284:1:84",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nativeSrc": "279:1:84",
                      "nodeType": "YulTypedName",
                      "src": "279:1:84",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "344:90:84",
                    "nodeType": "YulBlock",
                    "src": "344:90:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "373:9:84",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:84"
                                    },
                                    {
                                      "name": "i",
                                      "nativeSrc": "384:1:84",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:84"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "369:3:84",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:84"
                                  },
                                  "nativeSrc": "369:17:84",
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:84"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "388:2:84",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:84",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "365:3:84",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:84"
                              },
                              "nativeSrc": "365:26:84",
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:84"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nativeSrc": "407:6:84",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:84"
                                        },
                                        {
                                          "name": "i",
                                          "nativeSrc": "415:1:84",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:84"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "403:3:84",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:84"
                                      },
                                      "nativeSrc": "403:14:84",
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:84"
                                    },
                                    {
                                      "name": "_1",
                                      "nativeSrc": "419:2:84",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:84"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "399:3:84",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:84"
                                  },
                                  "nativeSrc": "399:23:84",
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:84"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "393:5:84",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:84"
                              },
                              "nativeSrc": "393:30:84",
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:84"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "358:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:84"
                          },
                          "nativeSrc": "358:66:84",
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:84"
                        },
                        "nativeSrc": "358:66:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:84"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nativeSrc": "305:1:84",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:84"
                      },
                      {
                        "name": "length",
                        "nativeSrc": "308:6:84",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:84"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nativeSrc": "302:2:84",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:84"
                    },
                    "nativeSrc": "302:13:84",
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:84"
                  },
                  "nativeSrc": "294:140:84",
                  "nodeType": "YulForLoop",
                  "post": {
                    "nativeSrc": "316:19:84",
                    "nodeType": "YulBlock",
                    "src": "316:19:84",
                    "statements": [
                      {
                        "nativeSrc": "318:15:84",
                        "nodeType": "YulAssignment",
                        "src": "318:15:84",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nativeSrc": "327:1:84",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:84"
                            },
                            {
                              "name": "_1",
                              "nativeSrc": "330:2:84",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:84"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nativeSrc": "323:3:84",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:84"
                          },
                          "nativeSrc": "323:10:84",
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:84"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nativeSrc": "318:1:84",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:84"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nativeSrc": "298:3:84",
                    "nodeType": "YulBlock",
                    "src": "298:3:84",
                    "statements": []
                  },
                  "src": "294:140:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "458:9:84",
                                "nodeType": "YulIdentifier",
                                "src": "458:9:84"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "469:6:84",
                                "nodeType": "YulIdentifier",
                                "src": "469:6:84"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "454:3:84",
                              "nodeType": "YulIdentifier",
                              "src": "454:3:84"
                            },
                            "nativeSrc": "454:22:84",
                            "nodeType": "YulFunctionCall",
                            "src": "454:22:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "478:2:84",
                            "nodeType": "YulLiteral",
                            "src": "478:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "450:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:84"
                        },
                        "nativeSrc": "450:31:84",
                        "nodeType": "YulFunctionCall",
                        "src": "450:31:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "483:1:84",
                        "nodeType": "YulLiteral",
                        "src": "483:1:84",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "443:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "443:6:84"
                    },
                    "nativeSrc": "443:42:84",
                    "nodeType": "YulFunctionCall",
                    "src": "443:42:84"
                  },
                  "nativeSrc": "443:42:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "443:42:84"
                },
                {
                  "nativeSrc": "494:62:84",
                  "nodeType": "YulAssignment",
                  "src": "494:62:84",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "510:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:84"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "529:6:84",
                                    "nodeType": "YulIdentifier",
                                    "src": "529:6:84"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "537:2:84",
                                    "nodeType": "YulLiteral",
                                    "src": "537:2:84",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "525:3:84",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:3:84"
                                },
                                "nativeSrc": "525:15:84",
                                "nodeType": "YulFunctionCall",
                                "src": "525:15:84"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "546:2:84",
                                    "nodeType": "YulLiteral",
                                    "src": "546:2:84",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nativeSrc": "542:3:84",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:3:84"
                                },
                                "nativeSrc": "542:7:84",
                                "nodeType": "YulFunctionCall",
                                "src": "542:7:84"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "521:3:84",
                              "nodeType": "YulIdentifier",
                              "src": "521:3:84"
                            },
                            "nativeSrc": "521:29:84",
                            "nodeType": "YulFunctionCall",
                            "src": "521:29:84"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "506:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:84"
                        },
                        "nativeSrc": "506:45:84",
                        "nodeType": "YulFunctionCall",
                        "src": "506:45:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "553:2:84",
                        "nodeType": "YulLiteral",
                        "src": "553:2:84",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "502:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:84"
                    },
                    "nativeSrc": "502:54:84",
                    "nodeType": "YulFunctionCall",
                    "src": "502:54:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "494:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "494:4:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "14:548:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "104:9:84",
                "nodeType": "YulTypedName",
                "src": "104:9:84",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "115:6:84",
                "nodeType": "YulTypedName",
                "src": "115:6:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "126:4:84",
                "nodeType": "YulTypedName",
                "src": "126:4:84",
                "type": ""
              }
            ],
            "src": "14:548:84"
          },
          {
            "body": {
              "nativeSrc": "616:124:84",
              "nodeType": "YulBlock",
              "src": "616:124:84",
              "statements": [
                {
                  "nativeSrc": "626:29:84",
                  "nodeType": "YulAssignment",
                  "src": "626:29:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nativeSrc": "648:6:84",
                        "nodeType": "YulIdentifier",
                        "src": "648:6:84"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "635:12:84",
                      "nodeType": "YulIdentifier",
                      "src": "635:12:84"
                    },
                    "nativeSrc": "635:20:84",
                    "nodeType": "YulFunctionCall",
                    "src": "635:20:84"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nativeSrc": "626:5:84",
                      "nodeType": "YulIdentifier",
                      "src": "626:5:84"
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "718:16:84",
                    "nodeType": "YulBlock",
                    "src": "718:16:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "727:1:84",
                              "nodeType": "YulLiteral",
                              "src": "727:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "730:1:84",
                              "nodeType": "YulLiteral",
                              "src": "730:1:84",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "720:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:84"
                          },
                          "nativeSrc": "720:12:84",
                          "nodeType": "YulFunctionCall",
                          "src": "720:12:84"
                        },
                        "nativeSrc": "720:12:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "720:12:84"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nativeSrc": "677:5:84",
                            "nodeType": "YulIdentifier",
                            "src": "677:5:84"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "688:5:84",
                                "nodeType": "YulIdentifier",
                                "src": "688:5:84"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "703:3:84",
                                        "nodeType": "YulLiteral",
                                        "src": "703:3:84",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "708:1:84",
                                        "nodeType": "YulLiteral",
                                        "src": "708:1:84",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "699:3:84",
                                      "nodeType": "YulIdentifier",
                                      "src": "699:3:84"
                                    },
                                    "nativeSrc": "699:11:84",
                                    "nodeType": "YulFunctionCall",
                                    "src": "699:11:84"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "712:1:84",
                                    "nodeType": "YulLiteral",
                                    "src": "712:1:84",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "695:3:84",
                                  "nodeType": "YulIdentifier",
                                  "src": "695:3:84"
                                },
                                "nativeSrc": "695:19:84",
                                "nodeType": "YulFunctionCall",
                                "src": "695:19:84"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "684:3:84",
                              "nodeType": "YulIdentifier",
                              "src": "684:3:84"
                            },
                            "nativeSrc": "684:31:84",
                            "nodeType": "YulFunctionCall",
                            "src": "684:31:84"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nativeSrc": "674:2:84",
                          "nodeType": "YulIdentifier",
                          "src": "674:2:84"
                        },
                        "nativeSrc": "674:42:84",
                        "nodeType": "YulFunctionCall",
                        "src": "674:42:84"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nativeSrc": "667:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "667:6:84"
                    },
                    "nativeSrc": "667:50:84",
                    "nodeType": "YulFunctionCall",
                    "src": "667:50:84"
                  },
                  "nativeSrc": "664:70:84",
                  "nodeType": "YulIf",
                  "src": "664:70:84"
                }
              ]
            },
            "name": "abi_decode_address",
            "nativeSrc": "567:173:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nativeSrc": "595:6:84",
                "nodeType": "YulTypedName",
                "src": "595:6:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nativeSrc": "606:5:84",
                "nodeType": "YulTypedName",
                "src": "606:5:84",
                "type": ""
              }
            ],
            "src": "567:173:84"
          },
          {
            "body": {
              "nativeSrc": "832:167:84",
              "nodeType": "YulBlock",
              "src": "832:167:84",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "878:16:84",
                    "nodeType": "YulBlock",
                    "src": "878:16:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "887:1:84",
                              "nodeType": "YulLiteral",
                              "src": "887:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "890:1:84",
                              "nodeType": "YulLiteral",
                              "src": "890:1:84",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "880:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "880:6:84"
                          },
                          "nativeSrc": "880:12:84",
                          "nodeType": "YulFunctionCall",
                          "src": "880:12:84"
                        },
                        "nativeSrc": "880:12:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "880:12:84"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "853:7:84",
                            "nodeType": "YulIdentifier",
                            "src": "853:7:84"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "862:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "862:9:84"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "849:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "849:3:84"
                        },
                        "nativeSrc": "849:23:84",
                        "nodeType": "YulFunctionCall",
                        "src": "849:23:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "874:2:84",
                        "nodeType": "YulLiteral",
                        "src": "874:2:84",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "845:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "845:3:84"
                    },
                    "nativeSrc": "845:32:84",
                    "nodeType": "YulFunctionCall",
                    "src": "845:32:84"
                  },
                  "nativeSrc": "842:52:84",
                  "nodeType": "YulIf",
                  "src": "842:52:84"
                },
                {
                  "nativeSrc": "903:39:84",
                  "nodeType": "YulAssignment",
                  "src": "903:39:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "932:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "932:9:84"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nativeSrc": "913:18:84",
                      "nodeType": "YulIdentifier",
                      "src": "913:18:84"
                    },
                    "nativeSrc": "913:29:84",
                    "nodeType": "YulFunctionCall",
                    "src": "913:29:84"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "903:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:84"
                    }
                  ]
                },
                {
                  "nativeSrc": "951:42:84",
                  "nodeType": "YulAssignment",
                  "src": "951:42:84",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "978:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "978:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "989:2:84",
                            "nodeType": "YulLiteral",
                            "src": "989:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "974:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "974:3:84"
                        },
                        "nativeSrc": "974:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "974:18:84"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "961:12:84",
                      "nodeType": "YulIdentifier",
                      "src": "961:12:84"
                    },
                    "nativeSrc": "961:32:84",
                    "nodeType": "YulFunctionCall",
                    "src": "961:32:84"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nativeSrc": "951:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nativeSrc": "745:254:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "790:9:84",
                "nodeType": "YulTypedName",
                "src": "790:9:84",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "801:7:84",
                "nodeType": "YulTypedName",
                "src": "801:7:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "813:6:84",
                "nodeType": "YulTypedName",
                "src": "813:6:84",
                "type": ""
              },
              {
                "name": "value1",
                "nativeSrc": "821:6:84",
                "nodeType": "YulTypedName",
                "src": "821:6:84",
                "type": ""
              }
            ],
            "src": "745:254:84"
          },
          {
            "body": {
              "nativeSrc": "1099:92:84",
              "nodeType": "YulBlock",
              "src": "1099:92:84",
              "statements": [
                {
                  "nativeSrc": "1109:26:84",
                  "nodeType": "YulAssignment",
                  "src": "1109:26:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1121:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "1121:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1132:2:84",
                        "nodeType": "YulLiteral",
                        "src": "1132:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "1117:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "1117:3:84"
                    },
                    "nativeSrc": "1117:18:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1117:18:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "1109:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "1109:4:84"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1151:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "1151:9:84"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "1176:6:84",
                                "nodeType": "YulIdentifier",
                                "src": "1176:6:84"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "1169:6:84",
                              "nodeType": "YulIdentifier",
                              "src": "1169:6:84"
                            },
                            "nativeSrc": "1169:14:84",
                            "nodeType": "YulFunctionCall",
                            "src": "1169:14:84"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nativeSrc": "1162:6:84",
                          "nodeType": "YulIdentifier",
                          "src": "1162:6:84"
                        },
                        "nativeSrc": "1162:22:84",
                        "nodeType": "YulFunctionCall",
                        "src": "1162:22:84"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1144:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "1144:6:84"
                    },
                    "nativeSrc": "1144:41:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1144:41:84"
                  },
                  "nativeSrc": "1144:41:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "1144:41:84"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nativeSrc": "1004:187:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "1068:9:84",
                "nodeType": "YulTypedName",
                "src": "1068:9:84",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "1079:6:84",
                "nodeType": "YulTypedName",
                "src": "1079:6:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "1090:4:84",
                "nodeType": "YulTypedName",
                "src": "1090:4:84",
                "type": ""
              }
            ],
            "src": "1004:187:84"
          },
          {
            "body": {
              "nativeSrc": "1297:76:84",
              "nodeType": "YulBlock",
              "src": "1297:76:84",
              "statements": [
                {
                  "nativeSrc": "1307:26:84",
                  "nodeType": "YulAssignment",
                  "src": "1307:26:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1319:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "1319:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1330:2:84",
                        "nodeType": "YulLiteral",
                        "src": "1330:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "1315:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "1315:3:84"
                    },
                    "nativeSrc": "1315:18:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1315:18:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "1307:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "1307:4:84"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1349:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "1349:9:84"
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "1360:6:84",
                        "nodeType": "YulIdentifier",
                        "src": "1360:6:84"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1342:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:84"
                    },
                    "nativeSrc": "1342:25:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1342:25:84"
                  },
                  "nativeSrc": "1342:25:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "1342:25:84"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nativeSrc": "1196:177:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "1266:9:84",
                "nodeType": "YulTypedName",
                "src": "1266:9:84",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "1277:6:84",
                "nodeType": "YulTypedName",
                "src": "1277:6:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "1288:4:84",
                "nodeType": "YulTypedName",
                "src": "1288:4:84",
                "type": ""
              }
            ],
            "src": "1196:177:84"
          },
          {
            "body": {
              "nativeSrc": "1482:224:84",
              "nodeType": "YulBlock",
              "src": "1482:224:84",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "1528:16:84",
                    "nodeType": "YulBlock",
                    "src": "1528:16:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1537:1:84",
                              "nodeType": "YulLiteral",
                              "src": "1537:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1540:1:84",
                              "nodeType": "YulLiteral",
                              "src": "1540:1:84",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "1530:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "1530:6:84"
                          },
                          "nativeSrc": "1530:12:84",
                          "nodeType": "YulFunctionCall",
                          "src": "1530:12:84"
                        },
                        "nativeSrc": "1530:12:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "1530:12:84"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1503:7:84",
                            "nodeType": "YulIdentifier",
                            "src": "1503:7:84"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "1512:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "1512:9:84"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "1499:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "1499:3:84"
                        },
                        "nativeSrc": "1499:23:84",
                        "nodeType": "YulFunctionCall",
                        "src": "1499:23:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1524:2:84",
                        "nodeType": "YulLiteral",
                        "src": "1524:2:84",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "1495:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "1495:3:84"
                    },
                    "nativeSrc": "1495:32:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1495:32:84"
                  },
                  "nativeSrc": "1492:52:84",
                  "nodeType": "YulIf",
                  "src": "1492:52:84"
                },
                {
                  "nativeSrc": "1553:39:84",
                  "nodeType": "YulAssignment",
                  "src": "1553:39:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1582:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "1582:9:84"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nativeSrc": "1563:18:84",
                      "nodeType": "YulIdentifier",
                      "src": "1563:18:84"
                    },
                    "nativeSrc": "1563:29:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1563:29:84"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "1553:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "1553:6:84"
                    }
                  ]
                },
                {
                  "nativeSrc": "1601:48:84",
                  "nodeType": "YulAssignment",
                  "src": "1601:48:84",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1634:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "1634:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "1645:2:84",
                            "nodeType": "YulLiteral",
                            "src": "1645:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "1630:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "1630:3:84"
                        },
                        "nativeSrc": "1630:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "1630:18:84"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nativeSrc": "1611:18:84",
                      "nodeType": "YulIdentifier",
                      "src": "1611:18:84"
                    },
                    "nativeSrc": "1611:38:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1611:38:84"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nativeSrc": "1601:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "1601:6:84"
                    }
                  ]
                },
                {
                  "nativeSrc": "1658:42:84",
                  "nodeType": "YulAssignment",
                  "src": "1658:42:84",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1685:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "1685:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "1696:2:84",
                            "nodeType": "YulLiteral",
                            "src": "1696:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "1681:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "1681:3:84"
                        },
                        "nativeSrc": "1681:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "1681:18:84"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "1668:12:84",
                      "nodeType": "YulIdentifier",
                      "src": "1668:12:84"
                    },
                    "nativeSrc": "1668:32:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1668:32:84"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nativeSrc": "1658:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nativeSrc": "1378:328:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "1432:9:84",
                "nodeType": "YulTypedName",
                "src": "1432:9:84",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "1443:7:84",
                "nodeType": "YulTypedName",
                "src": "1443:7:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "1455:6:84",
                "nodeType": "YulTypedName",
                "src": "1455:6:84",
                "type": ""
              },
              {
                "name": "value1",
                "nativeSrc": "1463:6:84",
                "nodeType": "YulTypedName",
                "src": "1463:6:84",
                "type": ""
              },
              {
                "name": "value2",
                "nativeSrc": "1471:6:84",
                "nodeType": "YulTypedName",
                "src": "1471:6:84",
                "type": ""
              }
            ],
            "src": "1378:328:84"
          },
          {
            "body": {
              "nativeSrc": "1808:87:84",
              "nodeType": "YulBlock",
              "src": "1808:87:84",
              "statements": [
                {
                  "nativeSrc": "1818:26:84",
                  "nodeType": "YulAssignment",
                  "src": "1818:26:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1830:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "1830:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1841:2:84",
                        "nodeType": "YulLiteral",
                        "src": "1841:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "1826:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "1826:3:84"
                    },
                    "nativeSrc": "1826:18:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1826:18:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "1818:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "1818:4:84"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1860:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "1860:9:84"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nativeSrc": "1875:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "1875:6:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "1883:4:84",
                            "nodeType": "YulLiteral",
                            "src": "1883:4:84",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nativeSrc": "1871:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "1871:3:84"
                        },
                        "nativeSrc": "1871:17:84",
                        "nodeType": "YulFunctionCall",
                        "src": "1871:17:84"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1853:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "1853:6:84"
                    },
                    "nativeSrc": "1853:36:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1853:36:84"
                  },
                  "nativeSrc": "1853:36:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "1853:36:84"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nativeSrc": "1711:184:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "1777:9:84",
                "nodeType": "YulTypedName",
                "src": "1777:9:84",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "1788:6:84",
                "nodeType": "YulTypedName",
                "src": "1788:6:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "1799:4:84",
                "nodeType": "YulTypedName",
                "src": "1799:4:84",
                "type": ""
              }
            ],
            "src": "1711:184:84"
          },
          {
            "body": {
              "nativeSrc": "1970:116:84",
              "nodeType": "YulBlock",
              "src": "1970:116:84",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "2016:16:84",
                    "nodeType": "YulBlock",
                    "src": "2016:16:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2025:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2025:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2028:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2028:1:84",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "2018:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2018:6:84"
                          },
                          "nativeSrc": "2018:12:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2018:12:84"
                        },
                        "nativeSrc": "2018:12:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "2018:12:84"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1991:7:84",
                            "nodeType": "YulIdentifier",
                            "src": "1991:7:84"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "2000:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "2000:9:84"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "1987:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "1987:3:84"
                        },
                        "nativeSrc": "1987:23:84",
                        "nodeType": "YulFunctionCall",
                        "src": "1987:23:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "2012:2:84",
                        "nodeType": "YulLiteral",
                        "src": "2012:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "1983:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "1983:3:84"
                    },
                    "nativeSrc": "1983:32:84",
                    "nodeType": "YulFunctionCall",
                    "src": "1983:32:84"
                  },
                  "nativeSrc": "1980:52:84",
                  "nodeType": "YulIf",
                  "src": "1980:52:84"
                },
                {
                  "nativeSrc": "2041:39:84",
                  "nodeType": "YulAssignment",
                  "src": "2041:39:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "2070:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "2070:9:84"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nativeSrc": "2051:18:84",
                      "nodeType": "YulIdentifier",
                      "src": "2051:18:84"
                    },
                    "nativeSrc": "2051:29:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2051:29:84"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "2041:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "2041:6:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nativeSrc": "1900:186:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "1936:9:84",
                "nodeType": "YulTypedName",
                "src": "1936:9:84",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "1947:7:84",
                "nodeType": "YulTypedName",
                "src": "1947:7:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "1959:6:84",
                "nodeType": "YulTypedName",
                "src": "1959:6:84",
                "type": ""
              }
            ],
            "src": "1900:186:84"
          },
          {
            "body": {
              "nativeSrc": "2178:173:84",
              "nodeType": "YulBlock",
              "src": "2178:173:84",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "2224:16:84",
                    "nodeType": "YulBlock",
                    "src": "2224:16:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2233:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2233:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2236:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2236:1:84",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "2226:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2226:6:84"
                          },
                          "nativeSrc": "2226:12:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2226:12:84"
                        },
                        "nativeSrc": "2226:12:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "2226:12:84"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2199:7:84",
                            "nodeType": "YulIdentifier",
                            "src": "2199:7:84"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "2208:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "2208:9:84"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "2195:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "2195:3:84"
                        },
                        "nativeSrc": "2195:23:84",
                        "nodeType": "YulFunctionCall",
                        "src": "2195:23:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "2220:2:84",
                        "nodeType": "YulLiteral",
                        "src": "2220:2:84",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "2191:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "2191:3:84"
                    },
                    "nativeSrc": "2191:32:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2191:32:84"
                  },
                  "nativeSrc": "2188:52:84",
                  "nodeType": "YulIf",
                  "src": "2188:52:84"
                },
                {
                  "nativeSrc": "2249:39:84",
                  "nodeType": "YulAssignment",
                  "src": "2249:39:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "2278:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "2278:9:84"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nativeSrc": "2259:18:84",
                      "nodeType": "YulIdentifier",
                      "src": "2259:18:84"
                    },
                    "nativeSrc": "2259:29:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2259:29:84"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "2249:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "2249:6:84"
                    }
                  ]
                },
                {
                  "nativeSrc": "2297:48:84",
                  "nodeType": "YulAssignment",
                  "src": "2297:48:84",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2330:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "2330:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "2341:2:84",
                            "nodeType": "YulLiteral",
                            "src": "2341:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "2326:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "2326:3:84"
                        },
                        "nativeSrc": "2326:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "2326:18:84"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nativeSrc": "2307:18:84",
                      "nodeType": "YulIdentifier",
                      "src": "2307:18:84"
                    },
                    "nativeSrc": "2307:38:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2307:38:84"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nativeSrc": "2297:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "2297:6:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nativeSrc": "2091:260:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "2136:9:84",
                "nodeType": "YulTypedName",
                "src": "2136:9:84",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "2147:7:84",
                "nodeType": "YulTypedName",
                "src": "2147:7:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "2159:6:84",
                "nodeType": "YulTypedName",
                "src": "2159:6:84",
                "type": ""
              },
              {
                "name": "value1",
                "nativeSrc": "2167:6:84",
                "nodeType": "YulTypedName",
                "src": "2167:6:84",
                "type": ""
              }
            ],
            "src": "2091:260:84"
          },
          {
            "body": {
              "nativeSrc": "2411:325:84",
              "nodeType": "YulBlock",
              "src": "2411:325:84",
              "statements": [
                {
                  "nativeSrc": "2421:22:84",
                  "nodeType": "YulAssignment",
                  "src": "2421:22:84",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nativeSrc": "2435:1:84",
                        "nodeType": "YulLiteral",
                        "src": "2435:1:84",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nativeSrc": "2438:4:84",
                        "nodeType": "YulIdentifier",
                        "src": "2438:4:84"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nativeSrc": "2431:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "2431:3:84"
                    },
                    "nativeSrc": "2431:12:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2431:12:84"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nativeSrc": "2421:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "2421:6:84"
                    }
                  ]
                },
                {
                  "nativeSrc": "2452:38:84",
                  "nodeType": "YulVariableDeclaration",
                  "src": "2452:38:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nativeSrc": "2482:4:84",
                        "nodeType": "YulIdentifier",
                        "src": "2482:4:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "2488:1:84",
                        "nodeType": "YulLiteral",
                        "src": "2488:1:84",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nativeSrc": "2478:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "2478:3:84"
                    },
                    "nativeSrc": "2478:12:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2478:12:84"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nativeSrc": "2456:18:84",
                      "nodeType": "YulTypedName",
                      "src": "2456:18:84",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "2529:31:84",
                    "nodeType": "YulBlock",
                    "src": "2529:31:84",
                    "statements": [
                      {
                        "nativeSrc": "2531:27:84",
                        "nodeType": "YulAssignment",
                        "src": "2531:27:84",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nativeSrc": "2545:6:84",
                              "nodeType": "YulIdentifier",
                              "src": "2545:6:84"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2553:4:84",
                              "nodeType": "YulLiteral",
                              "src": "2553:4:84",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nativeSrc": "2541:3:84",
                            "nodeType": "YulIdentifier",
                            "src": "2541:3:84"
                          },
                          "nativeSrc": "2541:17:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2541:17:84"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nativeSrc": "2531:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2531:6:84"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nativeSrc": "2509:18:84",
                        "nodeType": "YulIdentifier",
                        "src": "2509:18:84"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nativeSrc": "2502:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "2502:6:84"
                    },
                    "nativeSrc": "2502:26:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2502:26:84"
                  },
                  "nativeSrc": "2499:61:84",
                  "nodeType": "YulIf",
                  "src": "2499:61:84"
                },
                {
                  "body": {
                    "nativeSrc": "2619:111:84",
                    "nodeType": "YulBlock",
                    "src": "2619:111:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2640:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2640:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "2647:3:84",
                                  "nodeType": "YulLiteral",
                                  "src": "2647:3:84",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "2652:10:84",
                                  "nodeType": "YulLiteral",
                                  "src": "2652:10:84",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nativeSrc": "2643:3:84",
                                "nodeType": "YulIdentifier",
                                "src": "2643:3:84"
                              },
                              "nativeSrc": "2643:20:84",
                              "nodeType": "YulFunctionCall",
                              "src": "2643:20:84"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "2633:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2633:6:84"
                          },
                          "nativeSrc": "2633:31:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2633:31:84"
                        },
                        "nativeSrc": "2633:31:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "2633:31:84"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2684:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2684:1:84",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2687:4:84",
                              "nodeType": "YulLiteral",
                              "src": "2687:4:84",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "2677:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2677:6:84"
                          },
                          "nativeSrc": "2677:15:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2677:15:84"
                        },
                        "nativeSrc": "2677:15:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "2677:15:84"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2712:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2712:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2715:4:84",
                              "nodeType": "YulLiteral",
                              "src": "2715:4:84",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "2705:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2705:6:84"
                          },
                          "nativeSrc": "2705:15:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2705:15:84"
                        },
                        "nativeSrc": "2705:15:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "2705:15:84"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nativeSrc": "2575:18:84",
                        "nodeType": "YulIdentifier",
                        "src": "2575:18:84"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nativeSrc": "2598:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2598:6:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "2606:2:84",
                            "nodeType": "YulLiteral",
                            "src": "2606:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nativeSrc": "2595:2:84",
                          "nodeType": "YulIdentifier",
                          "src": "2595:2:84"
                        },
                        "nativeSrc": "2595:14:84",
                        "nodeType": "YulFunctionCall",
                        "src": "2595:14:84"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nativeSrc": "2572:2:84",
                      "nodeType": "YulIdentifier",
                      "src": "2572:2:84"
                    },
                    "nativeSrc": "2572:38:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2572:38:84"
                  },
                  "nativeSrc": "2569:161:84",
                  "nodeType": "YulIf",
                  "src": "2569:161:84"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nativeSrc": "2356:380:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nativeSrc": "2391:4:84",
                "nodeType": "YulTypedName",
                "src": "2391:4:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nativeSrc": "2400:6:84",
                "nodeType": "YulTypedName",
                "src": "2400:6:84",
                "type": ""
              }
            ],
            "src": "2356:380:84"
          },
          {
            "body": {
              "nativeSrc": "2789:174:84",
              "nodeType": "YulBlock",
              "src": "2789:174:84",
              "statements": [
                {
                  "nativeSrc": "2799:16:84",
                  "nodeType": "YulAssignment",
                  "src": "2799:16:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nativeSrc": "2810:1:84",
                        "nodeType": "YulIdentifier",
                        "src": "2810:1:84"
                      },
                      {
                        "name": "y",
                        "nativeSrc": "2813:1:84",
                        "nodeType": "YulIdentifier",
                        "src": "2813:1:84"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "2806:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "2806:3:84"
                    },
                    "nativeSrc": "2806:9:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2806:9:84"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nativeSrc": "2799:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "2799:3:84"
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "2846:111:84",
                    "nodeType": "YulBlock",
                    "src": "2846:111:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2867:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2867:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "2874:3:84",
                                  "nodeType": "YulLiteral",
                                  "src": "2874:3:84",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "2879:10:84",
                                  "nodeType": "YulLiteral",
                                  "src": "2879:10:84",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nativeSrc": "2870:3:84",
                                "nodeType": "YulIdentifier",
                                "src": "2870:3:84"
                              },
                              "nativeSrc": "2870:20:84",
                              "nodeType": "YulFunctionCall",
                              "src": "2870:20:84"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "2860:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2860:6:84"
                          },
                          "nativeSrc": "2860:31:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2860:31:84"
                        },
                        "nativeSrc": "2860:31:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "2860:31:84"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2911:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2911:1:84",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2914:4:84",
                              "nodeType": "YulLiteral",
                              "src": "2914:4:84",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "2904:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2904:6:84"
                          },
                          "nativeSrc": "2904:15:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2904:15:84"
                        },
                        "nativeSrc": "2904:15:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "2904:15:84"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2939:1:84",
                              "nodeType": "YulLiteral",
                              "src": "2939:1:84",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2942:4:84",
                              "nodeType": "YulLiteral",
                              "src": "2942:4:84",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "2932:6:84",
                            "nodeType": "YulIdentifier",
                            "src": "2932:6:84"
                          },
                          "nativeSrc": "2932:15:84",
                          "nodeType": "YulFunctionCall",
                          "src": "2932:15:84"
                        },
                        "nativeSrc": "2932:15:84",
                        "nodeType": "YulExpressionStatement",
                        "src": "2932:15:84"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nativeSrc": "2830:1:84",
                        "nodeType": "YulIdentifier",
                        "src": "2830:1:84"
                      },
                      {
                        "name": "sum",
                        "nativeSrc": "2833:3:84",
                        "nodeType": "YulIdentifier",
                        "src": "2833:3:84"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nativeSrc": "2827:2:84",
                      "nodeType": "YulIdentifier",
                      "src": "2827:2:84"
                    },
                    "nativeSrc": "2827:10:84",
                    "nodeType": "YulFunctionCall",
                    "src": "2827:10:84"
                  },
                  "nativeSrc": "2824:133:84",
                  "nodeType": "YulIf",
                  "src": "2824:133:84"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nativeSrc": "2741:222:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nativeSrc": "2772:1:84",
                "nodeType": "YulTypedName",
                "src": "2772:1:84",
                "type": ""
              },
              {
                "name": "y",
                "nativeSrc": "2775:1:84",
                "nodeType": "YulTypedName",
                "src": "2775:1:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nativeSrc": "2781:3:84",
                "nodeType": "YulTypedName",
                "src": "2781:3:84",
                "type": ""
              }
            ],
            "src": "2741:222:84"
          },
          {
            "body": {
              "nativeSrc": "3142:227:84",
              "nodeType": "YulBlock",
              "src": "3142:227:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3159:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "3159:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3170:2:84",
                        "nodeType": "YulLiteral",
                        "src": "3170:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3152:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3152:6:84"
                    },
                    "nativeSrc": "3152:21:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3152:21:84"
                  },
                  "nativeSrc": "3152:21:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3152:21:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3193:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "3193:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3204:2:84",
                            "nodeType": "YulLiteral",
                            "src": "3204:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3189:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "3189:3:84"
                        },
                        "nativeSrc": "3189:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "3189:18:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3209:2:84",
                        "nodeType": "YulLiteral",
                        "src": "3209:2:84",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3182:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3182:6:84"
                    },
                    "nativeSrc": "3182:30:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3182:30:84"
                  },
                  "nativeSrc": "3182:30:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3182:30:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3232:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "3232:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3243:2:84",
                            "nodeType": "YulLiteral",
                            "src": "3243:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3228:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "3228:3:84"
                        },
                        "nativeSrc": "3228:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "3228:18:84"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nativeSrc": "3248:34:84",
                        "nodeType": "YulLiteral",
                        "src": "3248:34:84",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3221:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3221:6:84"
                    },
                    "nativeSrc": "3221:62:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3221:62:84"
                  },
                  "nativeSrc": "3221:62:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3221:62:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3303:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "3303:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3314:2:84",
                            "nodeType": "YulLiteral",
                            "src": "3314:2:84",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3299:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "3299:3:84"
                        },
                        "nativeSrc": "3299:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "3299:18:84"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nativeSrc": "3319:7:84",
                        "nodeType": "YulLiteral",
                        "src": "3319:7:84",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3292:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3292:6:84"
                    },
                    "nativeSrc": "3292:35:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3292:35:84"
                  },
                  "nativeSrc": "3292:35:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3292:35:84"
                },
                {
                  "nativeSrc": "3336:27:84",
                  "nodeType": "YulAssignment",
                  "src": "3336:27:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3348:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "3348:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3359:3:84",
                        "nodeType": "YulLiteral",
                        "src": "3359:3:84",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "3344:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "3344:3:84"
                    },
                    "nativeSrc": "3344:19:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3344:19:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "3336:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "3336:4:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "2968:401:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "3119:9:84",
                "nodeType": "YulTypedName",
                "src": "3119:9:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "3133:4:84",
                "nodeType": "YulTypedName",
                "src": "3133:4:84",
                "type": ""
              }
            ],
            "src": "2968:401:84"
          },
          {
            "body": {
              "nativeSrc": "3548:226:84",
              "nodeType": "YulBlock",
              "src": "3548:226:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3565:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "3565:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3576:2:84",
                        "nodeType": "YulLiteral",
                        "src": "3576:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3558:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3558:6:84"
                    },
                    "nativeSrc": "3558:21:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3558:21:84"
                  },
                  "nativeSrc": "3558:21:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3558:21:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3599:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "3599:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3610:2:84",
                            "nodeType": "YulLiteral",
                            "src": "3610:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3595:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "3595:3:84"
                        },
                        "nativeSrc": "3595:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "3595:18:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3615:2:84",
                        "nodeType": "YulLiteral",
                        "src": "3615:2:84",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3588:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3588:6:84"
                    },
                    "nativeSrc": "3588:30:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3588:30:84"
                  },
                  "nativeSrc": "3588:30:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3588:30:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3638:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "3638:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3649:2:84",
                            "nodeType": "YulLiteral",
                            "src": "3649:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3634:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "3634:3:84"
                        },
                        "nativeSrc": "3634:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "3634:18:84"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nativeSrc": "3654:34:84",
                        "nodeType": "YulLiteral",
                        "src": "3654:34:84",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3627:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3627:6:84"
                    },
                    "nativeSrc": "3627:62:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3627:62:84"
                  },
                  "nativeSrc": "3627:62:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3627:62:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3709:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "3709:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3720:2:84",
                            "nodeType": "YulLiteral",
                            "src": "3720:2:84",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3705:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "3705:3:84"
                        },
                        "nativeSrc": "3705:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "3705:18:84"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nativeSrc": "3725:6:84",
                        "nodeType": "YulLiteral",
                        "src": "3725:6:84",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3698:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3698:6:84"
                    },
                    "nativeSrc": "3698:34:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3698:34:84"
                  },
                  "nativeSrc": "3698:34:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3698:34:84"
                },
                {
                  "nativeSrc": "3741:27:84",
                  "nodeType": "YulAssignment",
                  "src": "3741:27:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3753:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "3753:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3764:3:84",
                        "nodeType": "YulLiteral",
                        "src": "3764:3:84",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "3749:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "3749:3:84"
                    },
                    "nativeSrc": "3749:19:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3749:19:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "3741:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "3741:4:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "3374:400:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "3525:9:84",
                "nodeType": "YulTypedName",
                "src": "3525:9:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "3539:4:84",
                "nodeType": "YulTypedName",
                "src": "3539:4:84",
                "type": ""
              }
            ],
            "src": "3374:400:84"
          },
          {
            "body": {
              "nativeSrc": "3953:224:84",
              "nodeType": "YulBlock",
              "src": "3953:224:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3970:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "3970:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3981:2:84",
                        "nodeType": "YulLiteral",
                        "src": "3981:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3963:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3963:6:84"
                    },
                    "nativeSrc": "3963:21:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3963:21:84"
                  },
                  "nativeSrc": "3963:21:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3963:21:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4004:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "4004:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "4015:2:84",
                            "nodeType": "YulLiteral",
                            "src": "4015:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "4000:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "4000:3:84"
                        },
                        "nativeSrc": "4000:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "4000:18:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4020:2:84",
                        "nodeType": "YulLiteral",
                        "src": "4020:2:84",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3993:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "3993:6:84"
                    },
                    "nativeSrc": "3993:30:84",
                    "nodeType": "YulFunctionCall",
                    "src": "3993:30:84"
                  },
                  "nativeSrc": "3993:30:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "3993:30:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4043:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "4043:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "4054:2:84",
                            "nodeType": "YulLiteral",
                            "src": "4054:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "4039:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "4039:3:84"
                        },
                        "nativeSrc": "4039:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "4039:18:84"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nativeSrc": "4059:34:84",
                        "nodeType": "YulLiteral",
                        "src": "4059:34:84",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4032:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4032:6:84"
                    },
                    "nativeSrc": "4032:62:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4032:62:84"
                  },
                  "nativeSrc": "4032:62:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4032:62:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4114:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "4114:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "4125:2:84",
                            "nodeType": "YulLiteral",
                            "src": "4125:2:84",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "4110:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "4110:3:84"
                        },
                        "nativeSrc": "4110:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "4110:18:84"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nativeSrc": "4130:4:84",
                        "nodeType": "YulLiteral",
                        "src": "4130:4:84",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4103:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4103:6:84"
                    },
                    "nativeSrc": "4103:32:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4103:32:84"
                  },
                  "nativeSrc": "4103:32:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4103:32:84"
                },
                {
                  "nativeSrc": "4144:27:84",
                  "nodeType": "YulAssignment",
                  "src": "4144:27:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4156:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "4156:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4167:3:84",
                        "nodeType": "YulLiteral",
                        "src": "4167:3:84",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "4152:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "4152:3:84"
                    },
                    "nativeSrc": "4152:19:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4152:19:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "4144:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "4144:4:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "3779:398:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "3930:9:84",
                "nodeType": "YulTypedName",
                "src": "3930:9:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "3944:4:84",
                "nodeType": "YulTypedName",
                "src": "3944:4:84",
                "type": ""
              }
            ],
            "src": "3779:398:84"
          },
          {
            "body": {
              "nativeSrc": "4356:179:84",
              "nodeType": "YulBlock",
              "src": "4356:179:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4373:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "4373:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4384:2:84",
                        "nodeType": "YulLiteral",
                        "src": "4384:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4366:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4366:6:84"
                    },
                    "nativeSrc": "4366:21:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4366:21:84"
                  },
                  "nativeSrc": "4366:21:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4366:21:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4407:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "4407:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "4418:2:84",
                            "nodeType": "YulLiteral",
                            "src": "4418:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "4403:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "4403:3:84"
                        },
                        "nativeSrc": "4403:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "4403:18:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4423:2:84",
                        "nodeType": "YulLiteral",
                        "src": "4423:2:84",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4396:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4396:6:84"
                    },
                    "nativeSrc": "4396:30:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4396:30:84"
                  },
                  "nativeSrc": "4396:30:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4396:30:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4446:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "4446:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "4457:2:84",
                            "nodeType": "YulLiteral",
                            "src": "4457:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "4442:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "4442:3:84"
                        },
                        "nativeSrc": "4442:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "4442:18:84"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nativeSrc": "4462:31:84",
                        "nodeType": "YulLiteral",
                        "src": "4462:31:84",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4435:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4435:6:84"
                    },
                    "nativeSrc": "4435:59:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4435:59:84"
                  },
                  "nativeSrc": "4435:59:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4435:59:84"
                },
                {
                  "nativeSrc": "4503:26:84",
                  "nodeType": "YulAssignment",
                  "src": "4503:26:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4515:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "4515:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4526:2:84",
                        "nodeType": "YulLiteral",
                        "src": "4526:2:84",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "4511:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "4511:3:84"
                    },
                    "nativeSrc": "4511:18:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4511:18:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "4503:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "4503:4:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "4182:353:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "4333:9:84",
                "nodeType": "YulTypedName",
                "src": "4333:9:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "4347:4:84",
                "nodeType": "YulTypedName",
                "src": "4347:4:84",
                "type": ""
              }
            ],
            "src": "4182:353:84"
          },
          {
            "body": {
              "nativeSrc": "4714:227:84",
              "nodeType": "YulBlock",
              "src": "4714:227:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4731:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "4731:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4742:2:84",
                        "nodeType": "YulLiteral",
                        "src": "4742:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4724:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4724:6:84"
                    },
                    "nativeSrc": "4724:21:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4724:21:84"
                  },
                  "nativeSrc": "4724:21:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4724:21:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4765:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "4765:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "4776:2:84",
                            "nodeType": "YulLiteral",
                            "src": "4776:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "4761:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "4761:3:84"
                        },
                        "nativeSrc": "4761:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "4761:18:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4781:2:84",
                        "nodeType": "YulLiteral",
                        "src": "4781:2:84",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4754:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4754:6:84"
                    },
                    "nativeSrc": "4754:30:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4754:30:84"
                  },
                  "nativeSrc": "4754:30:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4754:30:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4804:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "4804:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "4815:2:84",
                            "nodeType": "YulLiteral",
                            "src": "4815:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "4800:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "4800:3:84"
                        },
                        "nativeSrc": "4800:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "4800:18:84"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nativeSrc": "4820:34:84",
                        "nodeType": "YulLiteral",
                        "src": "4820:34:84",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4793:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4793:6:84"
                    },
                    "nativeSrc": "4793:62:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4793:62:84"
                  },
                  "nativeSrc": "4793:62:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4793:62:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4875:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "4875:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "4886:2:84",
                            "nodeType": "YulLiteral",
                            "src": "4886:2:84",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "4871:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "4871:3:84"
                        },
                        "nativeSrc": "4871:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "4871:18:84"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nativeSrc": "4891:7:84",
                        "nodeType": "YulLiteral",
                        "src": "4891:7:84",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4864:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "4864:6:84"
                    },
                    "nativeSrc": "4864:35:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4864:35:84"
                  },
                  "nativeSrc": "4864:35:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "4864:35:84"
                },
                {
                  "nativeSrc": "4908:27:84",
                  "nodeType": "YulAssignment",
                  "src": "4908:27:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4920:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "4920:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4931:3:84",
                        "nodeType": "YulLiteral",
                        "src": "4931:3:84",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "4916:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "4916:3:84"
                    },
                    "nativeSrc": "4916:19:84",
                    "nodeType": "YulFunctionCall",
                    "src": "4916:19:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "4908:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "4908:4:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "4540:401:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "4691:9:84",
                "nodeType": "YulTypedName",
                "src": "4691:9:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "4705:4:84",
                "nodeType": "YulTypedName",
                "src": "4705:4:84",
                "type": ""
              }
            ],
            "src": "4540:401:84"
          },
          {
            "body": {
              "nativeSrc": "5120:225:84",
              "nodeType": "YulBlock",
              "src": "5120:225:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "5137:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "5137:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "5148:2:84",
                        "nodeType": "YulLiteral",
                        "src": "5148:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "5130:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "5130:6:84"
                    },
                    "nativeSrc": "5130:21:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5130:21:84"
                  },
                  "nativeSrc": "5130:21:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "5130:21:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5171:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "5171:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "5182:2:84",
                            "nodeType": "YulLiteral",
                            "src": "5182:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "5167:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "5167:3:84"
                        },
                        "nativeSrc": "5167:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "5167:18:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "5187:2:84",
                        "nodeType": "YulLiteral",
                        "src": "5187:2:84",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "5160:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "5160:6:84"
                    },
                    "nativeSrc": "5160:30:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5160:30:84"
                  },
                  "nativeSrc": "5160:30:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "5160:30:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5210:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "5210:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "5221:2:84",
                            "nodeType": "YulLiteral",
                            "src": "5221:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "5206:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "5206:3:84"
                        },
                        "nativeSrc": "5206:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "5206:18:84"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nativeSrc": "5226:34:84",
                        "nodeType": "YulLiteral",
                        "src": "5226:34:84",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "5199:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "5199:6:84"
                    },
                    "nativeSrc": "5199:62:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5199:62:84"
                  },
                  "nativeSrc": "5199:62:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "5199:62:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5281:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "5281:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "5292:2:84",
                            "nodeType": "YulLiteral",
                            "src": "5292:2:84",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "5277:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "5277:3:84"
                        },
                        "nativeSrc": "5277:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "5277:18:84"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nativeSrc": "5297:5:84",
                        "nodeType": "YulLiteral",
                        "src": "5297:5:84",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "5270:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "5270:6:84"
                    },
                    "nativeSrc": "5270:33:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5270:33:84"
                  },
                  "nativeSrc": "5270:33:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "5270:33:84"
                },
                {
                  "nativeSrc": "5312:27:84",
                  "nodeType": "YulAssignment",
                  "src": "5312:27:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "5324:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "5324:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "5335:3:84",
                        "nodeType": "YulLiteral",
                        "src": "5335:3:84",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "5320:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "5320:3:84"
                    },
                    "nativeSrc": "5320:19:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5320:19:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "5312:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "5312:4:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "4946:399:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "5097:9:84",
                "nodeType": "YulTypedName",
                "src": "5097:9:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "5111:4:84",
                "nodeType": "YulTypedName",
                "src": "5111:4:84",
                "type": ""
              }
            ],
            "src": "4946:399:84"
          },
          {
            "body": {
              "nativeSrc": "5524:228:84",
              "nodeType": "YulBlock",
              "src": "5524:228:84",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "5541:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "5541:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "5552:2:84",
                        "nodeType": "YulLiteral",
                        "src": "5552:2:84",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "5534:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "5534:6:84"
                    },
                    "nativeSrc": "5534:21:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5534:21:84"
                  },
                  "nativeSrc": "5534:21:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "5534:21:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5575:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "5575:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "5586:2:84",
                            "nodeType": "YulLiteral",
                            "src": "5586:2:84",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "5571:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "5571:3:84"
                        },
                        "nativeSrc": "5571:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "5571:18:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "5591:2:84",
                        "nodeType": "YulLiteral",
                        "src": "5591:2:84",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "5564:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "5564:6:84"
                    },
                    "nativeSrc": "5564:30:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5564:30:84"
                  },
                  "nativeSrc": "5564:30:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "5564:30:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5614:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "5614:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "5625:2:84",
                            "nodeType": "YulLiteral",
                            "src": "5625:2:84",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "5610:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "5610:3:84"
                        },
                        "nativeSrc": "5610:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "5610:18:84"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nativeSrc": "5630:34:84",
                        "nodeType": "YulLiteral",
                        "src": "5630:34:84",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "5603:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "5603:6:84"
                    },
                    "nativeSrc": "5603:62:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5603:62:84"
                  },
                  "nativeSrc": "5603:62:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "5603:62:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5685:9:84",
                            "nodeType": "YulIdentifier",
                            "src": "5685:9:84"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "5696:2:84",
                            "nodeType": "YulLiteral",
                            "src": "5696:2:84",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "5681:3:84",
                          "nodeType": "YulIdentifier",
                          "src": "5681:3:84"
                        },
                        "nativeSrc": "5681:18:84",
                        "nodeType": "YulFunctionCall",
                        "src": "5681:18:84"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nativeSrc": "5701:8:84",
                        "nodeType": "YulLiteral",
                        "src": "5701:8:84",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "5674:6:84",
                      "nodeType": "YulIdentifier",
                      "src": "5674:6:84"
                    },
                    "nativeSrc": "5674:36:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5674:36:84"
                  },
                  "nativeSrc": "5674:36:84",
                  "nodeType": "YulExpressionStatement",
                  "src": "5674:36:84"
                },
                {
                  "nativeSrc": "5719:27:84",
                  "nodeType": "YulAssignment",
                  "src": "5719:27:84",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "5731:9:84",
                        "nodeType": "YulIdentifier",
                        "src": "5731:9:84"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "5742:3:84",
                        "nodeType": "YulLiteral",
                        "src": "5742:3:84",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "5727:3:84",
                      "nodeType": "YulIdentifier",
                      "src": "5727:3:84"
                    },
                    "nativeSrc": "5727:19:84",
                    "nodeType": "YulFunctionCall",
                    "src": "5727:19:84"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "5719:4:84",
                      "nodeType": "YulIdentifier",
                      "src": "5719:4:84"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "5350:402:84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "5501:9:84",
                "nodeType": "YulTypedName",
                "src": "5501:9:84",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "5515:4:84",
                "nodeType": "YulTypedName",
                "src": "5515:4:84",
                "type": ""
              }
            ],
            "src": "5350:402:84"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 84,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1482:11763:16:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1482:11763:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:84;;1162:22;1144:41;;1132:2;1117:18;4770:197:16;1004:187:84;3581:106:16;3668:12;;3581:106;;;1342:25:84;;;1330:2;1315:18;3581:106:16;1196:177:84;5529:286:16;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;1853:36:84;;1841:2;1826:18;3430:91:16;1711:184:84;6210:234:16;;;;;;:::i;:::-;;:::i;3745:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:16;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2704:102;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4313:149::-;;;;;;:::i;:::-;;:::i;2493:98::-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:28;4907:32:16;929:10:28;4923:7:16;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:28;5712:38:16;5728:4;929:10:28;5743:6:16;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:16;;5529:286;-1:-1:-1;;;;5529:286:16:o;6210:234::-;6298:4;929:10:28;6352:64:16;929:10:28;6368:7:16;6405:10;6377:25;929:10:28;6368:7:16;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;2704:102::-;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:28;7024:4:16;7105:25;929:10:28;7122:7:16;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:16;;3170:2:84;7140:85:16;;;3152:21:84;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:84;;;3292:35;3344:19;;7140:85:16;;;;;;;;;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;4066:189::-;4145:4;929:10:28;4199:28:16;929:10:28;4216:2:16;4220:6;4199:9;:28::i;4313:149::-;-1:-1:-1;;;;;4428:18:16;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;10447:370::-;-1:-1:-1;;;;;10578:19:16;;10570:68;;;;-1:-1:-1;;;10570:68:16;;3576:2:84;10570:68:16;;;3558:21:84;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:84;;;3698:34;3749:19;;10570:68:16;3374:400:84;10570:68:16;-1:-1:-1;;;;;10656:21:16;;10648:68;;;;-1:-1:-1;;;10648:68:16;;3981:2:84;10648:68:16;;;3963:21:84;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:84;;;4103:32;4152:19;;10648:68:16;3779:398:84;10648:68:16;-1:-1:-1;;;;;10727:18:16;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1342:25:84;;;10778:32:16;;1315:18:84;10778:32:16;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:16;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:16;;4384:2:84;11347:68:16;;;4366:21:84;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11347:68:16;4182:353:84;11347:68:16;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:16;;7930:68;;;;-1:-1:-1;;;7930:68:16;;4742:2:84;7930:68:16;;;4724:21:84;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:84;;;4864:35;4916:19;;7930:68:16;4540:401:84;7930:68:16;-1:-1:-1;;;;;8016:16:16;;8008:64;;;;-1:-1:-1;;;8008:64:16;;5148:2:84;8008:64:16;;;5130:21:84;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:84;;;5270:33;5320:19;;8008:64:16;4946:399:84;8008:64:16;-1:-1:-1;;;;;8154:15:16;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:16;;5552:2:84;8179:72:16;;;5534:21:84;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:84;;;5674:36;5727:19;;8179:72:16;5350:402:84;8179:72:16;-1:-1:-1;;;;;8285:15:16;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:16;8391:4;-1:-1:-1;;;;;8382:26:16;;8401:6;8382:26;;;;1342:25:84;;1330:2;1315:18;;1196:177;8382:26:16;;;;;;;;8419:37;12123:121;14:548:84;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:84;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:84:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:84:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n",
  "sourcePath": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5535
      ],
      "ContextUpgradeable": [
        5577
      ],
      "ERC20Upgradeable": [
        3188
      ],
      "IERC20MetadataUpgradeable": [
        4012
      ],
      "IERC20Upgradeable": [
        3266
      ],
      "Initializable": [
        968
      ]
    },
    "id": 3189,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2579,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "105:23:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "./IERC20Upgradeable.sol",
        "id": 2580,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3189,
        "sourceUnit": 3267,
        "src": "130:33:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "file": "./extensions/IERC20MetadataUpgradeable.sol",
        "id": 2581,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3189,
        "sourceUnit": 4013,
        "src": "164:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "file": "../../utils/ContextUpgradeable.sol",
        "id": 2582,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3189,
        "sourceUnit": 5578,
        "src": "217:44:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 2583,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3189,
        "sourceUnit": 969,
        "src": "262:45:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2585,
              "name": "Initializable",
              "nameLocations": [
                "1511:13:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 968,
              "src": "1511:13:16"
            },
            "id": 2586,
            "nodeType": "InheritanceSpecifier",
            "src": "1511:13:16"
          },
          {
            "baseName": {
              "id": 2587,
              "name": "ContextUpgradeable",
              "nameLocations": [
                "1526:18:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5577,
              "src": "1526:18:16"
            },
            "id": 2588,
            "nodeType": "InheritanceSpecifier",
            "src": "1526:18:16"
          },
          {
            "baseName": {
              "id": 2589,
              "name": "IERC20Upgradeable",
              "nameLocations": [
                "1546:17:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3266,
              "src": "1546:17:16"
            },
            "id": 2590,
            "nodeType": "InheritanceSpecifier",
            "src": "1546:17:16"
          },
          {
            "baseName": {
              "id": 2591,
              "name": "IERC20MetadataUpgradeable",
              "nameLocations": [
                "1565:25:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4012,
              "src": "1565:25:16"
            },
            "id": 2592,
            "nodeType": "InheritanceSpecifier",
            "src": "1565:25:16"
          }
        ],
        "canonicalName": "ERC20Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2584,
          "nodeType": "StructuredDocumentation",
          "src": "309:1172:16",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 3188,
        "linearizedBaseContracts": [
          3188,
          4012,
          3266,
          5577,
          968
        ],
        "name": "ERC20Upgradeable",
        "nameLocation": "1491:16:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2596,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1633:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 3188,
            "src": "1597:45:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2595,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2593,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1605:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1597:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2594,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1616:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2602,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1705:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 3188,
            "src": "1649:67:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 2601,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2597,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1657:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1649:47:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2600,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 2598,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1676:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1668:27:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 2599,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1687:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2604,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1739:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 3188,
            "src": "1723:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2603,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1723:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2606,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1773:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 3188,
            "src": "1758:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2605,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1758:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2608,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1799:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 3188,
            "src": "1784:22:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2607,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1784:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2623,
              "nodeType": "Block",
              "src": "2208:55:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2619,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "2241:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2620,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "2248:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2618,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2642,
                      "src": "2218:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2218:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "2218:38:16"
                }
              ]
            },
            "documentation": {
              "id": 2609,
              "nodeType": "StructuredDocumentation",
              "src": "1813:298:16",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 2624,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2616,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2615,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "2191:16:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 931,
                  "src": "2191:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2191:16:16"
              }
            ],
            "name": "__ERC20_init",
            "nameLocation": "2125:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2611,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2152:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "2138:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2610,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2613,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2173:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "2159:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:44:16"
            },
            "returnParameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2208:0:16"
            },
            "scope": 3188,
            "src": "2116:147:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2641,
              "nodeType": "Block",
              "src": "2371:57:16",
              "statements": [
                {
                  "expression": {
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2633,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2606,
                      "src": "2381:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2634,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2626,
                      "src": "2389:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2381:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2636,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:13:16"
                },
                {
                  "expression": {
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2637,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2608,
                      "src": "2404:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2638,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2628,
                      "src": "2414:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2404:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2640,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:17:16"
                }
              ]
            },
            "id": 2642,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2631,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2630,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "2354:16:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 931,
                  "src": "2354:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2354:16:16"
              }
            ],
            "name": "__ERC20_init_unchained",
            "nameLocation": "2278:22:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2626,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2315:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2301:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2625,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2336:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2322:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2627,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2300:44:16"
            },
            "returnParameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2371:0:16"
            },
            "scope": 3188,
            "src": "2269:159:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3999
            ],
            "body": {
              "id": 2651,
              "nodeType": "Block",
              "src": "2562:29:16",
              "statements": [
                {
                  "expression": {
                    "id": 2649,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2606,
                    "src": "2579:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2648,
                  "id": 2650,
                  "nodeType": "Return",
                  "src": "2572:12:16"
                }
              ]
            },
            "documentation": {
              "id": 2643,
              "nodeType": "StructuredDocumentation",
              "src": "2434:54:16",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 2652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2502:4:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2645,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2529:8:16"
            },
            "parameters": {
              "id": 2644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2506:2:16"
            },
            "returnParameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2652,
                  "src": "2547:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2546:15:16"
            },
            "scope": 3188,
            "src": "2493:98:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4005
            ],
            "body": {
              "id": 2661,
              "nodeType": "Block",
              "src": "2775:31:16",
              "statements": [
                {
                  "expression": {
                    "id": 2659,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2608,
                    "src": "2792:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2658,
                  "id": 2660,
                  "nodeType": "Return",
                  "src": "2785:14:16"
                }
              ]
            },
            "documentation": {
              "id": 2653,
              "nodeType": "StructuredDocumentation",
              "src": "2597:102:16",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 2662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2713:6:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2655,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2742:8:16"
            },
            "parameters": {
              "id": 2654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2719:2:16"
            },
            "returnParameters": {
              "id": 2658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2662,
                  "src": "2760:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2656,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2759:15:16"
            },
            "scope": 3188,
            "src": "2704:102:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4011
            ],
            "body": {
              "id": 2671,
              "nodeType": "Block",
              "src": "3495:26:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 2669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3512:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 2668,
                  "id": 2670,
                  "nodeType": "Return",
                  "src": "3505:9:16"
                }
              ]
            },
            "documentation": {
              "id": 2663,
              "nodeType": "StructuredDocumentation",
              "src": "2812:613:16",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 2672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3439:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2665,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3470:8:16"
            },
            "parameters": {
              "id": 2664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3447:2:16"
            },
            "returnParameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "3488:5:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3488:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3487:7:16"
            },
            "scope": 3188,
            "src": "3430:91:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3215
            ],
            "body": {
              "id": 2681,
              "nodeType": "Block",
              "src": "3651:36:16",
              "statements": [
                {
                  "expression": {
                    "id": 2679,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2604,
                    "src": "3668:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2678,
                  "id": 2680,
                  "nodeType": "Return",
                  "src": "3661:19:16"
                }
              ]
            },
            "documentation": {
              "id": 2673,
              "nodeType": "StructuredDocumentation",
              "src": "3527:49:16",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 2682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3590:11:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2675,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3624:8:16"
            },
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3601:2:16"
            },
            "returnParameters": {
              "id": 2678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "3642:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3641:9:16"
            },
            "scope": 3188,
            "src": "3581:106:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3223
            ],
            "body": {
              "id": 2695,
              "nodeType": "Block",
              "src": "3828:42:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2691,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2596,
                      "src": "3845:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2693,
                    "indexExpression": {
                      "id": 2692,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2685,
                      "src": "3855:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3845:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2690,
                  "id": 2694,
                  "nodeType": "Return",
                  "src": "3838:25:16"
                }
              ]
            },
            "documentation": {
              "id": 2683,
              "nodeType": "StructuredDocumentation",
              "src": "3693:47:16",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2696,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3754:9:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2687,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3801:8:16"
            },
            "parameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2685,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3772:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2696,
                  "src": "3764:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3764:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3763:17:16"
            },
            "returnParameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2689,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2696,
                  "src": "3819:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3818:9:16"
            },
            "scope": 3188,
            "src": "3745:125:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3233
            ],
            "body": {
              "id": 2720,
              "nodeType": "Block",
              "src": "4151:104:16",
              "statements": [
                {
                  "assignments": [
                    2708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2708,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4169:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2720,
                      "src": "4161:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2707,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4161:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2711,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2709,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5562,
                      "src": "4177:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4161:28:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2713,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2708,
                        "src": "4209:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2714,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2699,
                        "src": "4216:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2715,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2701,
                        "src": "4220:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2712,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2944,
                      "src": "4199:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4199:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2717,
                  "nodeType": "ExpressionStatement",
                  "src": "4199:28:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4244:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2706,
                  "id": 2719,
                  "nodeType": "Return",
                  "src": "4237:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2697,
              "nodeType": "StructuredDocumentation",
              "src": "3876:185:16",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 2721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4075:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2703,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4127:8:16"
            },
            "parameters": {
              "id": 2702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2699,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4092:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2721,
                  "src": "4084:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2701,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4104:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2721,
                  "src": "4096:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4096:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4083:28:16"
            },
            "returnParameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2721,
                  "src": "4145:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4145:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4144:6:16"
            },
            "scope": 3188,
            "src": "4066:189:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3243
            ],
            "body": {
              "id": 2738,
              "nodeType": "Block",
              "src": "4411:51:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2732,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2602,
                        "src": "4428:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2734,
                      "indexExpression": {
                        "id": 2733,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2724,
                        "src": "4440:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4428:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2736,
                    "indexExpression": {
                      "id": 2735,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2726,
                      "src": "4447:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4428:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2731,
                  "id": 2737,
                  "nodeType": "Return",
                  "src": "4421:34:16"
                }
              ]
            },
            "documentation": {
              "id": 2722,
              "nodeType": "StructuredDocumentation",
              "src": "4261:47:16",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 2739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4322:9:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2728,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4384:8:16"
            },
            "parameters": {
              "id": 2727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2724,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4340:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "4332:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4332:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2726,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4355:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "4347:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4347:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4331:32:16"
            },
            "returnParameters": {
              "id": 2731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "4402:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4401:9:16"
            },
            "scope": 3188,
            "src": "4313:149:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3253
            ],
            "body": {
              "id": 2763,
              "nodeType": "Block",
              "src": "4859:108:16",
              "statements": [
                {
                  "assignments": [
                    2751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2751,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4877:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2763,
                      "src": "4869:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2750,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4869:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2754,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2752,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5562,
                      "src": "4885:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4869:28:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2756,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2751,
                        "src": "4916:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2757,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2742,
                        "src": "4923:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2758,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2744,
                        "src": "4932:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2755,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3117,
                      "src": "4907:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4907:32:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2760,
                  "nodeType": "ExpressionStatement",
                  "src": "4907:32:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4956:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2749,
                  "id": 2762,
                  "nodeType": "Return",
                  "src": "4949:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2740,
              "nodeType": "StructuredDocumentation",
              "src": "4468:297:16",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 2764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4779:7:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2746,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4835:8:16"
            },
            "parameters": {
              "id": 2745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2742,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4795:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2764,
                  "src": "4787:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4787:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2744,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4812:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2764,
                  "src": "4804:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4786:33:16"
            },
            "returnParameters": {
              "id": 2749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2764,
                  "src": "4853:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4853:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4852:6:16"
            },
            "scope": 3188,
            "src": "4770:197:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3265
            ],
            "body": {
              "id": 2796,
              "nodeType": "Block",
              "src": "5662:153:16",
              "statements": [
                {
                  "assignments": [
                    2778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2778,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5680:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2796,
                      "src": "5672:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2777,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5672:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2781,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2779,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5562,
                      "src": "5690:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5672:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2783,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2767,
                        "src": "5728:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2784,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2778,
                        "src": "5734:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2785,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2771,
                        "src": "5743:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2782,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3160,
                      "src": "5712:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5712:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2787,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:38:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2789,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2767,
                        "src": "5770:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2790,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2769,
                        "src": "5776:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2791,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2771,
                        "src": "5780:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2788,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2944,
                      "src": "5760:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5760:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2793,
                  "nodeType": "ExpressionStatement",
                  "src": "5760:27:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5804:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2776,
                  "id": 2795,
                  "nodeType": "Return",
                  "src": "5797:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2765,
              "nodeType": "StructuredDocumentation",
              "src": "4973:551:16",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 2797,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5538:12:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2773,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5638:8:16"
            },
            "parameters": {
              "id": 2772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2767,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5568:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2797,
                  "src": "5560:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2769,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5590:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2797,
                  "src": "5582:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5582:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2771,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5610:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2797,
                  "src": "5602:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5602:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5550:72:16"
            },
            "returnParameters": {
              "id": 2776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2797,
                  "src": "5656:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2774,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5655:6:16"
            },
            "scope": 3188,
            "src": "5529:286:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2825,
              "nodeType": "Block",
              "src": "6304:140:16",
              "statements": [
                {
                  "assignments": [
                    2808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2808,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6322:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2825,
                      "src": "6314:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2807,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6314:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2811,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2809,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5562,
                      "src": "6330:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6314:28:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2813,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2808,
                        "src": "6361:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2814,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2800,
                        "src": "6368:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2816,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2808,
                              "src": "6387:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2817,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2800,
                              "src": "6394:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2815,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2739,
                            "src": "6377:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6377:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2819,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2802,
                          "src": "6405:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6377:38:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2812,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3117,
                      "src": "6352:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6352:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2822,
                  "nodeType": "ExpressionStatement",
                  "src": "6352:64:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6433:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2806,
                  "id": 2824,
                  "nodeType": "Return",
                  "src": "6426:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2798,
              "nodeType": "StructuredDocumentation",
              "src": "5821:384:16",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 2826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6219:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2800,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6245:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "6237:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6237:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2802,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "6262:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "6254:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6254:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6236:37:16"
            },
            "returnParameters": {
              "id": 2806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "6298:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2804,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6298:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6297:6:16"
            },
            "scope": 3188,
            "src": "6210:234:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2866,
              "nodeType": "Block",
              "src": "7030:328:16",
              "statements": [
                {
                  "assignments": [
                    2837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2837,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7048:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2866,
                      "src": "7040:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2836,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7040:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2840,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2838,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5562,
                      "src": "7056:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7056:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7040:28:16"
                },
                {
                  "assignments": [
                    2842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2842,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "7086:16:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2866,
                      "src": "7078:24:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2841,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7078:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2847,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2844,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2837,
                        "src": "7115:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2845,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2829,
                        "src": "7122:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2843,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2739,
                      "src": "7105:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7105:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7078:52:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2849,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2842,
                          "src": "7148:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2850,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2831,
                          "src": "7168:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7148:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 2852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7185:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 2848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7140:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7140:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2854,
                  "nodeType": "ExpressionStatement",
                  "src": "7140:85:16"
                },
                {
                  "id": 2863,
                  "nodeType": "UncheckedBlock",
                  "src": "7235:95:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2856,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2837,
                            "src": "7268:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2857,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2829,
                            "src": "7275:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2858,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2842,
                              "src": "7284:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2859,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2831,
                              "src": "7303:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7284:34:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2855,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3117,
                          "src": "7259:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 2861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7259:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2862,
                      "nodeType": "ExpressionStatement",
                      "src": "7259:60:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7347:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2835,
                  "id": 2865,
                  "nodeType": "Return",
                  "src": "7340:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2827,
              "nodeType": "StructuredDocumentation",
              "src": "6450:476:16",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 2867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6940:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2829,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6966:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "6958:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6958:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2831,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6983:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "6975:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6975:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6957:42:16"
            },
            "returnParameters": {
              "id": 2835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "7024:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2833,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7024:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7023:6:16"
            },
            "scope": 3188,
            "src": "6931:427:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2943,
              "nodeType": "Block",
              "src": "7920:543:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2878,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2870,
                          "src": "7938:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7954:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7946:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7946:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7946:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7938:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7958:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 2877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7930:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7930:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2886,
                  "nodeType": "ExpressionStatement",
                  "src": "7930:68:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2888,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2872,
                          "src": "8016:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8030:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8022:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2889,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8022:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8022:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8016:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8034:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 2887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8008:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8008:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2896,
                  "nodeType": "ExpressionStatement",
                  "src": "8008:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2898,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2870,
                        "src": "8104:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2899,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2872,
                        "src": "8110:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2900,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2874,
                        "src": "8114:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2897,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3171,
                      "src": "8083:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8083:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2902,
                  "nodeType": "ExpressionStatement",
                  "src": "8083:38:16"
                },
                {
                  "assignments": [
                    2904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2904,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "8140:11:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2943,
                      "src": "8132:19:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2903,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8132:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2908,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2905,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2596,
                      "src": "8154:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2907,
                    "indexExpression": {
                      "id": 2906,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2870,
                      "src": "8164:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8154:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8132:37:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2910,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2904,
                          "src": "8187:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2911,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2874,
                          "src": "8202:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8187:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 2913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8210:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 2909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8179:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8179:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2915,
                  "nodeType": "ExpressionStatement",
                  "src": "8179:72:16"
                },
                {
                  "id": 2924,
                  "nodeType": "UncheckedBlock",
                  "src": "8261:73:16",
                  "statements": [
                    {
                      "expression": {
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2916,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2596,
                            "src": "8285:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2918,
                          "indexExpression": {
                            "id": 2917,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2870,
                            "src": "8295:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8285:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2919,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2904,
                            "src": "8303:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2920,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2874,
                            "src": "8317:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8303:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8285:38:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2923,
                      "nodeType": "ExpressionStatement",
                      "src": "8285:38:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2925,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2596,
                        "src": "8343:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2927,
                      "indexExpression": {
                        "id": 2926,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2872,
                        "src": "8353:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8343:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2928,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2874,
                      "src": "8360:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8343:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2930,
                  "nodeType": "ExpressionStatement",
                  "src": "8343:23:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2932,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2870,
                        "src": "8391:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2933,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2872,
                        "src": "8397:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2934,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2874,
                        "src": "8401:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2931,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3200,
                      "src": "8382:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2936,
                  "nodeType": "EmitStatement",
                  "src": "8377:31:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2938,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2870,
                        "src": "8439:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2939,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2872,
                        "src": "8445:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2940,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2874,
                        "src": "8449:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2937,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3182,
                      "src": "8419:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8419:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2942,
                  "nodeType": "ExpressionStatement",
                  "src": "8419:37:16"
                }
              ]
            },
            "documentation": {
              "id": 2868,
              "nodeType": "StructuredDocumentation",
              "src": "7364:443:16",
              "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 2944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7821:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2870,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7848:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2944,
                  "src": "7840:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7840:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2872,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7870:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2944,
                  "src": "7862:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7862:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2874,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7890:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2944,
                  "src": "7882:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7882:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7830:72:16"
            },
            "returnParameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7920:0:16"
            },
            "scope": 3188,
            "src": "7812:651:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2999,
              "nodeType": "Block",
              "src": "8804:324:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2953,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2947,
                          "src": "8822:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8841:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8833:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2954,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8833:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8833:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8822:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8845:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 2952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8814:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8814:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2961,
                  "nodeType": "ExpressionStatement",
                  "src": "8814:65:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8919:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8911:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2963,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8911:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8911:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2967,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "8923:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2968,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2949,
                        "src": "8932:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2962,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3171,
                      "src": "8890:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8890:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2970,
                  "nodeType": "ExpressionStatement",
                  "src": "8890:49:16"
                },
                {
                  "expression": {
                    "id": 2973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2971,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2604,
                      "src": "8950:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2972,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2949,
                      "src": "8966:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8950:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2974,
                  "nodeType": "ExpressionStatement",
                  "src": "8950:22:16"
                },
                {
                  "expression": {
                    "id": 2979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2975,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2596,
                        "src": "8982:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2977,
                      "indexExpression": {
                        "id": 2976,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "8992:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8982:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2978,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2949,
                      "src": "9004:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8982:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2980,
                  "nodeType": "ExpressionStatement",
                  "src": "8982:28:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9042:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9034:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2982,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9034:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9034:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2986,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "9046:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2987,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2949,
                        "src": "9055:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2981,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3200,
                      "src": "9025:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9025:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2989,
                  "nodeType": "EmitStatement",
                  "src": "9020:42:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9101:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9093:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9093:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9093:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2995,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "9105:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2996,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2949,
                        "src": "9114:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2990,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3182,
                      "src": "9073:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9073:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2998,
                  "nodeType": "ExpressionStatement",
                  "src": "9073:48:16"
                }
              ]
            },
            "documentation": {
              "id": 2945,
              "nodeType": "StructuredDocumentation",
              "src": "8469:265:16",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 3000,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8748:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2947,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8762:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3000,
                  "src": "8754:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8754:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2949,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8779:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3000,
                  "src": "8771:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8771:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8753:33:16"
            },
            "returnParameters": {
              "id": 2951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8804:0:16"
            },
            "scope": 3188,
            "src": "8739:389:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3071,
              "nodeType": "Block",
              "src": "9513:511:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3009,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3003,
                          "src": "9531:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9550:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9542:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3010,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9542:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9542:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9531:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 3015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9554:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 3008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9523:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9523:67:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3017,
                  "nodeType": "ExpressionStatement",
                  "src": "9523:67:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3019,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3003,
                        "src": "9622:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9639:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9631:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3020,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9631:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9631:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3024,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3005,
                        "src": "9643:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3018,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3171,
                      "src": "9601:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9601:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "9601:49:16"
                },
                {
                  "assignments": [
                    3028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3028,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9669:14:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 3071,
                      "src": "9661:22:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3027,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9661:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3032,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3029,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2596,
                      "src": "9686:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3031,
                    "indexExpression": {
                      "id": 3030,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3003,
                      "src": "9696:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9686:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9661:43:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3034,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3028,
                          "src": "9722:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3035,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3005,
                          "src": "9740:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9722:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 3037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9748:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 3033,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9714:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9714:71:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3039,
                  "nodeType": "ExpressionStatement",
                  "src": "9714:71:16"
                },
                {
                  "id": 3048,
                  "nodeType": "UncheckedBlock",
                  "src": "9795:79:16",
                  "statements": [
                    {
                      "expression": {
                        "id": 3046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 3040,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2596,
                            "src": "9819:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3042,
                          "indexExpression": {
                            "id": 3041,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3003,
                            "src": "9829:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9819:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3043,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3028,
                            "src": "9840:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 3044,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3005,
                            "src": "9857:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9840:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9819:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3047,
                      "nodeType": "ExpressionStatement",
                      "src": "9819:44:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 3051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3049,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2604,
                      "src": "9883:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 3050,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3005,
                      "src": "9899:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9883:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3052,
                  "nodeType": "ExpressionStatement",
                  "src": "9883:22:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3054,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3003,
                        "src": "9930:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9947:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9939:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3055,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9939:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9939:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3059,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3005,
                        "src": "9951:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3053,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3200,
                      "src": "9921:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9921:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3061,
                  "nodeType": "EmitStatement",
                  "src": "9916:42:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3063,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3003,
                        "src": "9989:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10006:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9998:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3064,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9998:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9998:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3068,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3005,
                        "src": "10010:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3062,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3182,
                      "src": "9969:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9969:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3070,
                  "nodeType": "ExpressionStatement",
                  "src": "9969:48:16"
                }
              ]
            },
            "documentation": {
              "id": 3001,
              "nodeType": "StructuredDocumentation",
              "src": "9134:309:16",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 3072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9457:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3003,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9471:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "9463:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9463:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3005,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9488:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "9480:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9480:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9462:33:16"
            },
            "returnParameters": {
              "id": 3007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9513:0:16"
            },
            "scope": 3188,
            "src": "9448:576:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3116,
              "nodeType": "Block",
              "src": "10560:257:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3083,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3075,
                          "src": "10578:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10595:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10587:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3084,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10587:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10587:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10578:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 3089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10599:38:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 3082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10570:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10570:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "10570:68:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3093,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3077,
                          "src": "10656:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10675:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10667:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3094,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10667:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10667:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10656:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 3099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10679:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 3092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10648:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10648:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3101,
                  "nodeType": "ExpressionStatement",
                  "src": "10648:68:16"
                },
                {
                  "expression": {
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3102,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2602,
                          "src": "10727:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3105,
                        "indexExpression": {
                          "id": 3103,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3075,
                          "src": "10739:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10727:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3106,
                      "indexExpression": {
                        "id": 3104,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3077,
                        "src": "10746:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10727:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3107,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3079,
                      "src": "10757:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10727:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3109,
                  "nodeType": "ExpressionStatement",
                  "src": "10727:36:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3111,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "10787:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3112,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3077,
                        "src": "10794:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3113,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3079,
                        "src": "10803:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3110,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3209,
                      "src": "10778:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10778:32:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3115,
                  "nodeType": "EmitStatement",
                  "src": "10773:37:16"
                }
              ]
            },
            "documentation": {
              "id": 3073,
              "nodeType": "StructuredDocumentation",
              "src": "10030:412:16",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 3117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10456:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3075,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10482:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3117,
                  "src": "10474:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10474:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3077,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10505:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3117,
                  "src": "10497:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10497:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3079,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10530:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3117,
                  "src": "10522:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10522:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10464:78:16"
            },
            "returnParameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10560:0:16"
            },
            "scope": 3188,
            "src": "10447:370:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3159,
              "nodeType": "Block",
              "src": "11218:321:16",
              "statements": [
                {
                  "assignments": [
                    3128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3128,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "11236:16:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 3159,
                      "src": "11228:24:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11228:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3133,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3130,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3120,
                        "src": "11265:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3131,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3122,
                        "src": "11272:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3129,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2739,
                      "src": "11255:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11255:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11228:52:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3134,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3128,
                      "src": "11294:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11319:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3136,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11319:7:16",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 3135,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "11314:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 3138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11314:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 3139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "11328:3:16",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "11314:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11294:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3158,
                  "nodeType": "IfStatement",
                  "src": "11290:243:16",
                  "trueBody": {
                    "id": 3157,
                    "nodeType": "Block",
                    "src": "11333:200:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3142,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3128,
                                "src": "11355:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3143,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3124,
                                "src": "11375:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11355:26:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 3145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11383:31:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 3141,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "11347:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11347:68:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3147,
                        "nodeType": "ExpressionStatement",
                        "src": "11347:68:16"
                      },
                      {
                        "id": 3156,
                        "nodeType": "UncheckedBlock",
                        "src": "11429:94:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3149,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "11466:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3150,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3122,
                                  "src": "11473:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3151,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3128,
                                    "src": "11482:16:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 3152,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3124,
                                    "src": "11501:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11482:25:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3148,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3117,
                                "src": "11457:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11457:51:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 3155,
                            "nodeType": "ExpressionStatement",
                            "src": "11457:51:16"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3118,
              "nodeType": "StructuredDocumentation",
              "src": "10823:270:16",
              "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 3160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "11107:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3120,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11140:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "11132:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11132:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3122,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "11163:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "11155:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11155:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3124,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11188:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3160,
                  "src": "11180:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11180:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11122:78:16"
            },
            "returnParameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11218:0:16"
            },
            "scope": 3188,
            "src": "11098:441:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3170,
              "nodeType": "Block",
              "src": "12242:2:16",
              "statements": []
            },
            "documentation": {
              "id": 3161,
              "nodeType": "StructuredDocumentation",
              "src": "11545:573:16",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12132:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3163,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12170:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3171,
                  "src": "12162:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12162:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3165,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12192:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3171,
                  "src": "12184:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12184:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12212:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3171,
                  "src": "12204:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12204:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12152:72:16"
            },
            "returnParameters": {
              "id": 3169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12242:0:16"
            },
            "scope": 3188,
            "src": "12123:121:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3181,
              "nodeType": "Block",
              "src": "12950:2:16",
              "statements": []
            },
            "documentation": {
              "id": 3172,
              "nodeType": "StructuredDocumentation",
              "src": "12250:577:16",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "12841:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3174,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12878:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "12870:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12870:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3176,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12900:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "12892:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12892:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3178,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12920:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "12912:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12912:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12860:72:16"
            },
            "returnParameters": {
              "id": 3180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12950:0:16"
            },
            "scope": 3188,
            "src": "12832:120:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3183,
              "nodeType": "StructuredDocumentation",
              "src": "12958:254:16",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 3187,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "13237:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 3188,
            "src": "13217:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$45_storage",
              "typeString": "uint256[45]"
            },
            "typeName": {
              "baseType": {
                "id": 3184,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "13217:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3186,
              "length": {
                "hexValue": "3435",
                "id": 3185,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "13225:2:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_45_by_1",
                  "typeString": "int_const 45"
                },
                "value": "45"
              },
              "nodeType": "ArrayTypeName",
              "src": "13217:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
                "typeString": "uint256[45]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 3189,
        "src": "1482:11763:16",
        "usedErrors": [],
        "usedEvents": [
          832,
          3200,
          3209
        ]
      }
    ],
    "src": "105:13141:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.15",
  "updatedAt": "2023-08-15T23:19:36.549Z",
  "devdoc": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "stateVariables": {
      "__gap": {
        "details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}