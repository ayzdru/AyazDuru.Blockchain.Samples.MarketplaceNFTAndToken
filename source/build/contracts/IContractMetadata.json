{
  "contractName": "IContractMetadata",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"}},\"kind\":\"dev\",\"methods\":{\"contractURI()\":{\"details\":\"Returns the metadata URI of the contract.\"},\"setContractURI(string)\":{\"details\":\"Sets contract URI for the storefront-level metadata of the contract.       Only module admin can call this function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI  for you contract.  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":\"IContractMetadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\n/**\n *  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n *  for you contract.\n *\n *  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\n */\n\ninterface IContractMetadata {\n    /// @dev Returns the metadata URI of the contract.\n    function contractURI() external view returns (string memory);\n\n    /**\n     *  @dev Sets contract URI for the storefront-level metadata of the contract.\n     *       Only module admin can call this function.\n     */\n    function setContractURI(string calldata _uri) external;\n\n    /// @dev Emitted when the contract URI is updated.\n    event ContractURIUpdated(string prevURI, string newURI);\n}\n",
  "sourcePath": "@thirdweb-dev\\contracts\\extension\\interface\\IContractMetadata.sol",
  "ast": {
    "absolutePath": "@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol",
    "exportedSymbols": {
      "IContractMetadata": [
        10999
      ]
    },
    "id": 11000,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10978,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IContractMetadata",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 10979,
          "nodeType": "StructuredDocumentation",
          "src": "86:264:52",
          "text": "  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n  for you contract.\n  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."
        },
        "fullyImplemented": false,
        "id": 10999,
        "linearizedBaseContracts": [
          10999
        ],
        "name": "IContractMetadata",
        "nameLocation": "362:17:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 10980,
              "nodeType": "StructuredDocumentation",
              "src": "386:50:52",
              "text": "@dev Returns the metadata URI of the contract."
            },
            "functionSelector": "e8a3d485",
            "id": 10985,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contractURI",
            "nameLocation": "450:11:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:2:52"
            },
            "returnParameters": {
              "id": 10984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10983,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10985,
                  "src": "487:13:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10982,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:15:52"
            },
            "scope": 10999,
            "src": "441:61:52",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 10986,
              "nodeType": "StructuredDocumentation",
              "src": "508:148:52",
              "text": "  @dev Sets contract URI for the storefront-level metadata of the contract.\n       Only module admin can call this function."
            },
            "functionSelector": "938e3d7b",
            "id": 10991,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setContractURI",
            "nameLocation": "670:14:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10988,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "701:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 10991,
                  "src": "685:20:52",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10987,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "684:22:52"
            },
            "returnParameters": {
              "id": 10990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:0:52"
            },
            "scope": 10999,
            "src": "661:55:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10992,
              "nodeType": "StructuredDocumentation",
              "src": "722:50:52",
              "text": "@dev Emitted when the contract URI is updated."
            },
            "eventSelector": "c9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16",
            "id": 10998,
            "name": "ContractURIUpdated",
            "nameLocation": "783:18:52",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10994,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "prevURI",
                  "nameLocation": "809:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 10998,
                  "src": "802:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10993,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10996,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newURI",
                  "nameLocation": "825:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 10998,
                  "src": "818:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10995,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:6:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:31:52"
            },
            "src": "777:56:52"
          }
        ],
        "scope": 11000,
        "src": "352:483:52",
        "usedErrors": [],
        "usedEvents": [
          10998
        ]
      }
    ],
    "src": "39:797:52"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.15",
  "updatedAt": "2023-08-15T23:19:36.617Z",
  "devdoc": {
    "events": {
      "ContractURIUpdated(string,string)": {
        "details": "Emitted when the contract URI is updated."
      }
    },
    "kind": "dev",
    "methods": {
      "contractURI()": {
        "details": "Returns the metadata URI of the contract."
      },
      "setContractURI(string)": {
        "details": "Sets contract URI for the storefront-level metadata of the contract.       Only module admin can call this function."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI  for you contract.  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.",
    "version": 1
  }
}