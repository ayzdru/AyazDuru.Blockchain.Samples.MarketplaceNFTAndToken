{
  "contractName": "IMultiwrap",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "unwrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedContents",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        }
      ],
      "name": "TokensUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientOfWrappedToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenIdOfWrappedToken",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct ITokenBundle.Token[]",
          "name": "wrappedContents",
          "type": "tuple[]"
        }
      ],
      "name": "TokensWrapped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetContract",
              "type": "address"
            },
            {
              "internalType": "enum ITokenBundle.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenBundle.Token[]",
          "name": "wrappedContents",
          "type": "tuple[]"
        },
        {
          "internalType": "string",
          "name": "uriForWrappedToken",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unwrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedContents\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"}],\"name\":\"TokensUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientOfWrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenIdOfWrappedToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"wrappedContents\",\"type\":\"tuple[]\"}],\"name\":\"TokensWrapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"enum ITokenBundle.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBundle.Token[]\",\"name\":\"wrappedContents\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"uriForWrappedToken\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensUnwrapped(address,address,uint256)\":{\"details\":\"Emitted when tokens are unwrapped.\"},\"TokensWrapped(address,address,uint256,(address,uint8,uint256,uint256)[])\":{\"details\":\"Emitted when tokens are wrapped.\"}},\"kind\":\"dev\",\"methods\":{\"unwrap(uint256,address)\":{\"params\":{\"recipient\":\"The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT.\",\"tokenId\":\"The token Id of the wrapped NFT to unwrap.\"}},\"wrap((address,uint8,uint256,uint256)[],string,address)\":{\"params\":{\"recipient\":\"The recipient of the wrapped NFT.\",\"uriForWrappedToken\":\"The metadata URI for the wrapped NFT.\",\"wrappedContents\":\"The tokens to wrap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"unwrap(uint256,address)\":{\"notice\":\"Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\"},\"wrap((address,uint8,uint256,uint256)[],string,address)\":{\"notice\":\"Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\"}},\"notice\":\"Thirdweb's Multiwrap contract lets you wrap arbitrary ERC20, ERC721 and ERC1155  tokens you own into a single wrapped token / NFT.  A wrapped NFT can be unwrapped i.e. burned in exchange for its underlying contents.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/interfaces/IMultiwrap.sol\":\"IMultiwrap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/extension/interface/ITokenBundle.sol\":{\"keccak256\":\"0x4b575f4d82b4cb77b48262e2bffcc15497e52d21c38ba5614668a9cd29540949\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://496f280ff443f0466263cf06351b18a1796bfc5fe5948a7ae60316435ef564a0\",\"dweb:/ipfs/QmbAvbEe7X1oNbBDSFqPDWKmSkZC7dv4kN3aHJde2b4dV3\"]},\"@thirdweb-dev/contracts/interfaces/IMultiwrap.sol\":{\"keccak256\":\"0xf8638871fa6d07ca85e7eeea11087b58480ee23511645d32795933a8f631b46c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://69093c698a5b354393fba17da6d4a03e92aafeab527438fdf966fd2f6f2e7be7\",\"dweb:/ipfs/QmTXPwqBhahnaTuQvd4fUeEHW1JdX6CBRBhWKGctzN6hGo\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.11;\n\nimport \"../extension/interface/ITokenBundle.sol\";\n\n/**\n *  Thirdweb's Multiwrap contract lets you wrap arbitrary ERC20, ERC721 and ERC1155\n *  tokens you own into a single wrapped token / NFT.\n *\n *  A wrapped NFT can be unwrapped i.e. burned in exchange for its underlying contents.\n */\n\ninterface IMultiwrap is ITokenBundle {\n    /// @dev Emitted when tokens are wrapped.\n    event TokensWrapped(\n        address indexed wrapper,\n        address indexed recipientOfWrappedToken,\n        uint256 indexed tokenIdOfWrappedToken,\n        Token[] wrappedContents\n    );\n\n    /// @dev Emitted when tokens are unwrapped.\n    event TokensUnwrapped(\n        address indexed unwrapper,\n        address indexed recipientOfWrappedContents,\n        uint256 indexed tokenIdOfWrappedToken\n    );\n\n    /**\n     *  @notice Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\n     *\n     *  @param wrappedContents    The tokens to wrap.\n     *  @param uriForWrappedToken The metadata URI for the wrapped NFT.\n     *  @param recipient          The recipient of the wrapped NFT.\n     */\n    function wrap(\n        Token[] memory wrappedContents,\n        string calldata uriForWrappedToken,\n        address recipient\n    ) external payable returns (uint256 tokenId);\n\n    /**\n     *  @notice Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\n     *\n     *  @param tokenId   The token Id of the wrapped NFT to unwrap.\n     *  @param recipient The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT.\n     */\n    function unwrap(uint256 tokenId, address recipient) external;\n}\n",
  "sourcePath": "@thirdweb-dev\\contracts\\interfaces\\IMultiwrap.sol",
  "ast": {
    "absolutePath": "@thirdweb-dev/contracts/interfaces/IMultiwrap.sol",
    "exportedSymbols": {
      "IMultiwrap": [
        11331
      ],
      "ITokenBundle": [
        11280
      ]
    },
    "id": 11332,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11282,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:60"
      },
      {
        "absolutePath": "@thirdweb-dev/contracts/extension/interface/ITokenBundle.sol",
        "file": "../extension/interface/ITokenBundle.sol",
        "id": 11283,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11332,
        "sourceUnit": 11281,
        "src": "65:49:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11285,
              "name": "ITokenBundle",
              "nameLocations": [
                "378:12:60"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11280,
              "src": "378:12:60"
            },
            "id": 11286,
            "nodeType": "InheritanceSpecifier",
            "src": "378:12:60"
          }
        ],
        "canonicalName": "IMultiwrap",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 11284,
          "nodeType": "StructuredDocumentation",
          "src": "116:236:60",
          "text": "  Thirdweb's Multiwrap contract lets you wrap arbitrary ERC20, ERC721 and ERC1155\n  tokens you own into a single wrapped token / NFT.\n  A wrapped NFT can be unwrapped i.e. burned in exchange for its underlying contents."
        },
        "fullyImplemented": false,
        "id": 11331,
        "linearizedBaseContracts": [
          11331,
          11280
        ],
        "name": "IMultiwrap",
        "nameLocation": "364:10:60",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 11287,
              "nodeType": "StructuredDocumentation",
              "src": "397:41:60",
              "text": "@dev Emitted when tokens are wrapped."
            },
            "eventSelector": "d37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c",
            "id": 11299,
            "name": "TokensWrapped",
            "nameLocation": "449:13:60",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11289,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wrapper",
                  "nameLocation": "488:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11299,
                  "src": "472:23:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11291,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipientOfWrappedToken",
                  "nameLocation": "521:23:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11299,
                  "src": "505:39:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11293,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIdOfWrappedToken",
                  "nameLocation": "570:21:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11299,
                  "src": "554:37:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wrappedContents",
                  "nameLocation": "609:15:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11299,
                  "src": "601:23:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$11268_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11295,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11294,
                        "name": "Token",
                        "nameLocations": [
                          "601:5:60"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11268,
                        "src": "601:5:60"
                      },
                      "referencedDeclaration": 11268,
                      "src": "601:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$11268_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 11296,
                    "nodeType": "ArrayTypeName",
                    "src": "601:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$11268_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "462:168:60"
            },
            "src": "443:188:60"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11300,
              "nodeType": "StructuredDocumentation",
              "src": "637:43:60",
              "text": "@dev Emitted when tokens are unwrapped."
            },
            "eventSelector": "e9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a73",
            "id": 11308,
            "name": "TokensUnwrapped",
            "nameLocation": "691:15:60",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11302,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "unwrapper",
                  "nameLocation": "732:9:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11308,
                  "src": "716:25:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11304,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipientOfWrappedContents",
                  "nameLocation": "767:26:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11308,
                  "src": "751:42:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11306,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenIdOfWrappedToken",
                  "nameLocation": "819:21:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11308,
                  "src": "803:37:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "706:140:60"
            },
            "src": "685:162:60"
          },
          {
            "documentation": {
              "id": 11309,
              "nodeType": "StructuredDocumentation",
              "src": "853:299:60",
              "text": "  @notice Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT.\n  @param wrappedContents    The tokens to wrap.\n  @param uriForWrappedToken The metadata URI for the wrapped NFT.\n  @param recipient          The recipient of the wrapped NFT."
            },
            "functionSelector": "29e471dd",
            "id": 11322,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nameLocation": "1166:4:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11313,
                  "mutability": "mutable",
                  "name": "wrappedContents",
                  "nameLocation": "1195:15:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11322,
                  "src": "1180:30:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$11268_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ITokenBundle.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11311,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11310,
                        "name": "Token",
                        "nameLocations": [
                          "1180:5:60"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11268,
                        "src": "1180:5:60"
                      },
                      "referencedDeclaration": 11268,
                      "src": "1180:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$11268_storage_ptr",
                        "typeString": "struct ITokenBundle.Token"
                      }
                    },
                    "id": 11312,
                    "nodeType": "ArrayTypeName",
                    "src": "1180:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$11268_storage_$dyn_storage_ptr",
                      "typeString": "struct ITokenBundle.Token[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11315,
                  "mutability": "mutable",
                  "name": "uriForWrappedToken",
                  "nameLocation": "1236:18:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11322,
                  "src": "1220:34:60",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11314,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11317,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1272:9:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11322,
                  "src": "1264:17:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1170:117:60"
            },
            "returnParameters": {
              "id": 11321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11320,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1322:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11322,
                  "src": "1314:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1313:17:60"
            },
            "scope": 11331,
            "src": "1157:174:60",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11323,
              "nodeType": "StructuredDocumentation",
              "src": "1337:284:60",
              "text": "  @notice Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens.\n  @param tokenId   The token Id of the wrapped NFT to unwrap.\n  @param recipient The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT."
            },
            "functionSelector": "7647691d",
            "id": 11330,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nameLocation": "1635:6:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11325,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1650:7:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11330,
                  "src": "1642:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11327,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1667:9:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11330,
                  "src": "1659:17:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1641:36:60"
            },
            "returnParameters": {
              "id": 11329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1686:0:60"
            },
            "scope": 11331,
            "src": "1626:61:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11332,
        "src": "354:1335:60",
        "usedErrors": [],
        "usedEvents": [
          11299,
          11308
        ]
      }
    ],
    "src": "39:1651:60"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.15",
  "updatedAt": "2023-08-15T23:19:36.622Z",
  "devdoc": {
    "events": {
      "TokensUnwrapped(address,address,uint256)": {
        "details": "Emitted when tokens are unwrapped."
      },
      "TokensWrapped(address,address,uint256,(address,uint8,uint256,uint256)[])": {
        "details": "Emitted when tokens are wrapped."
      }
    },
    "kind": "dev",
    "methods": {
      "unwrap(uint256,address)": {
        "params": {
          "recipient": "The recipient of the underlying ERC1155, ERC721, ERC20 tokens of the wrapped NFT.",
          "tokenId": "The token Id of the wrapped NFT to unwrap."
        }
      },
      "wrap((address,uint8,uint256,uint256)[],string,address)": {
        "params": {
          "recipient": "The recipient of the wrapped NFT.",
          "uriForWrappedToken": "The metadata URI for the wrapped NFT.",
          "wrappedContents": "The tokens to wrap."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "unwrap(uint256,address)": {
        "notice": "Unwrap a wrapped NFT to retrieve underlying ERC1155, ERC721, ERC20 tokens."
      },
      "wrap((address,uint8,uint256,uint256)[],string,address)": {
        "notice": "Wrap multiple ERC1155, ERC721, ERC20 tokens into a single wrapped NFT."
      }
    },
    "notice": "Thirdweb's Multiwrap contract lets you wrap arbitrary ERC20, ERC721 and ERC1155  tokens you own into a single wrapped token / NFT.  A wrapped NFT can be unwrapped i.e. burned in exchange for its underlying contents.",
    "version": 1
  }
}